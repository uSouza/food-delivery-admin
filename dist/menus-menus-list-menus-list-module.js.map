{"version":3,"sources":["webpack:///./src/app/layout/menus/menus-list/menus-list-routing.module.ts","webpack:///./src/app/layout/menus/menus-list/menus-list.component.html","webpack:///./src/app/layout/menus/menus-list/menus-list.component.scss","webpack:///./src/app/layout/menus/menus-list/menus-list.component.ts","webpack:///./src/app/layout/menus/menus-list/menus-list.module.ts"],"names":[],"mappings":"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","file":"menus-menus-list-menus-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MenusListComponent } from './menus-list.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MenusListComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MenusListRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"row\\\">\\n       <div class=\\\"col-lg-12\\\">\\n          <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n          <div class=\\\"card mb-3\\\">\\n             <div class=\\\"card-header\\\">Listagem de cardápios</div>\\n             <h5 *ngIf=\\\"menus.length == 0\\\">Não há cardápios para exibir</h5>\\n             <table *ngIf=\\\"menus.length > 0\\\" class=\\\"card-body table\\\">\\n                <thead>\\n                   <tr>\\n                      <th>#</th>\\n                      <th>Descrição</th>\\n                      <th>Observação</th>\\n                      <th>Data</th>\\n                      <th>Status</th>\\n                      <th>Ação</th>\\n                   </tr>\\n                </thead>\\n                <tbody *ngFor=\\\"let menu of menus | paginate: { itemsPerPage: 7, currentPage: page }\\\">\\n                   <tr *ngIf=\\\"menu.deleted_at == null\\\" class=\\\"table-default\\\">\\n                      <th>{{menu.id}}</th>\\n                      <td>{{menu.description}}</td>\\n                      <td>{{menu.observation}}</td>\\n                      <td *ngIf=\\\"! menu.fixed_menu || menu.fixed_menu == null\\\">{{menu.date | date: 'dd/MM/yyyy'}}</td>\\n                      <td *ngIf=\\\"menu.fixed_menu\\\">Fixo</td>\\n                      <td>Ativo</td>\\n                      <td>\\n                         <button (click)=\\\"showMenu(menu)\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\">Visualizar</button>\\n                      </td>\\n                   </tr>\\n                   <tr *ngIf=\\\"menu.deleted_at != null\\\" class=\\\"table-warning\\\">\\n                    <th>{{menu.id}}</th>\\n                    <td>{{menu.description}}</td>\\n                    <td>{{menu.observation}}</td>\\n                    <td *ngIf=\\\"! menu.fixed_menu || menu.fixed_menu == null\\\">{{menu.date | date: 'dd/MM/yyyy'}}</td>\\n                    <td *ngIf=\\\"menu.fixed_menu\\\">Fixo</td>\\n                    <td>Inativo</td>\\n                    <td>\\n                       <button (click)=\\\"showMenu(menu)\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\">Visualizar</button>\\n                    </td>\\n                 </tr>\\n                </tbody>\\n             </table>\\n             <div class=\\\"has-text-centered\\\">\\n                <pagination-controls\\n                    (pageChange)=\\\"page = $event\\\"\\n                    previousLabel=\\\"Anterior\\\"\\n                    nextLabel=\\\"Próximo\\\">\\n                </pagination-controls>\\n            </div>\\n          </div>\\n       </div>\\n    </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { MenusService } from '../../../services/menus/menus.service';\n\n@Component({\n  selector: 'app-menus-list',\n  templateUrl: './menus-list.component.html',\n  styleUrls: ['./menus-list.component.scss']\n})\nexport class MenusListComponent implements OnInit {\n\n    menus: any[];\n    page: number = 1;\n    public alerts: Array<any> = [];\n\n    constructor(public router: Router,\n                public route: ActivatedRoute,\n                private menusService: MenusService) { }\n\n    ngOnInit() {\n        if (this.route.snapshot.paramMap.get('message') != null) {\n            this.showAlert('success', this.route.snapshot.paramMap.get('message'));\n        }\n        if (localStorage.getItem('access_token') == null) {\n            this.router.navigate(['/login']);\n        }\n        this.getMenus();\n    }\n\n    getMenus() {\n        this.menusService\n            .getMenus(localStorage.getItem('access_token'))\n            .subscribe(\n                menus => {\n                    this.menus = menus\n                }\n            )\n    }\n\n    showMenu(menu: any) {\n        this.router.navigate(['/menus-show', { id: menu.id }]);\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        )\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MenusListRoutingModule } from './menus-list-routing.module';\nimport { MenusListComponent } from './menus-list.component';\nimport {NgxMaskModule} from 'ngx-mask';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {DatePipe} from '@angular/common';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        MenusListRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgbModule.forRoot(),\n        NgxPaginationModule,\n        NgxMaskModule.forRoot()\n    ],\n    declarations: [MenusListComponent],\n    providers: [DatePipe],\n})\nexport class MenusListModule {}\n"],"sourceRoot":""}