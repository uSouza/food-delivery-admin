{"version":3,"sources":["webpack:///./src/app/layout/restaurants/restaurants-show/restaurants-show-routing.module.ts","webpack:///./src/app/layout/restaurants/restaurants-show/restaurants-show.component.html","webpack:///./src/app/layout/restaurants/restaurants-show/restaurants-show.component.scss","webpack:///./src/app/layout/restaurants/restaurants-show/restaurants-show.component.ts","webpack:///./src/app/layout/restaurants/restaurants-show/restaurants-show.module.ts"],"names":[],"mappings":"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","file":"restaurants-restaurants-show-restaurants-show-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RestaurantsShowComponent } from './restaurants-show.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RestaurantsShowComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class RestaurantsShowRoutingModule {}\n","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Inativação de restaurante</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Deseja realmente inativar o restaurante?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('noDelete')\\\">Não</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('delete')\\\">Sim</button>\\n    </div>\\n</ng-template>\\n\\n<div class=\\\"content\\\">\\n<div class=\\\"row\\\">\\n    <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n    <div class=\\\"col-xl-12\\\">\\n        <h2>\\n            Restaurante nº {{restaurant.id}}\\n        </h2>\\n    </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-3\\\">\\n        <img src=\\\"{{restaurant.image_base64}}\\\" alt=\\\"\\\">\\n    </div>\\n    <div class=\\\"col-xl-9\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n              Dados gerais do restaurante\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\"><strong>Razão social: </strong>{{ restaurant.social_name }}</h5>\\n              <p class=\\\"card-text\\\"><strong>Fantasia: </strong>{{ restaurant.fantasy_name }}</p>\\n              <p class=\\\"card-text\\\"><strong>Celular: </strong>{{ restaurant.cell_phone }}</p>\\n              <p class=\\\"card-text\\\"><strong>Telefone: </strong>{{ restaurant.phone }}</p>\\n              <p class=\\\"card-text\\\"><strong>CNPJ: </strong>{{ restaurant.cnpj }}</p>\\n              <p class=\\\"card-text\\\"><strong>Responsável: </strong>{{ restaurant.responsible_name }}</p>\\n              <p class=\\\"card-text\\\"><strong>Telefone Responsável: </strong>{{ restaurant.responsible_phone }}</p>\\n              <p class=\\\"card-text\\\"><strong>Limite de pedidos/dia: </strong>{{ restaurant.order_limit }}</p>\\n              <p class=\\\"card-text\\\"><strong>Valor de entrega: </strong>{{ restaurant.delivery_value | currency: 'BRL': true }}</p>\\n              <p class=\\\"card-text\\\"><strong>Tempo médio de entrega: </strong>{{ restaurant.avg_delivery_time }}</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12 text-right\\\">\\n        <button *ngIf=\\\"restaurant.deleted_at == null\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-danger\\\" (click)=\\\"delete(content)\\\">Inativar</button>\\n        <button *ngIf=\\\"restaurant.deleted_at != null\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-warning\\\" (click)=\\\"restoreRestaurant(restaurant)\\\">Reativar</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"edit()\\\">Editar</button>\\n    </div>\\n</div>\\n</div>\\n\"","module.exports = \"img {\\n  max-width: 300px;\\n  max-height: 400px;\\n  width: auto;\\n  height: auto; }\\n\\n.row {\\n  margin-top: 10px; }\\n\\n.btn-lg {\\n  margin-left: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { RestaurantsService } from '../../../services/restaurants/restaurants.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-restaurants-show',\n  templateUrl: './restaurants-show.component.html',\n  styleUrls: ['./restaurants-show.component.scss']\n})\nexport class RestaurantsShowComponent implements OnInit {\n\n    restaurant: any;\n    public alerts: Array<any> = [];\n\n    constructor(public route: ActivatedRoute,\n                private router: Router,\n                private restaurantsService: RestaurantsService,\n                private modalService: NgbModal) { }\n\n    ngOnInit() {\n        if (localStorage.getItem('access_token') != null) {\n            this.getRestaurant();\n        } else {\n            this.router.navigate(['/login']);\n        }\n    }\n\n    getRestaurant() {\n        console.log(this.route.snapshot.paramMap.get('id'));\n        this.restaurantsService\n            .getRestaurant(localStorage.getItem('access_token'), this.route.snapshot.paramMap.get('id'))\n            .subscribe(\n                restaurant => {\n                    this.setRestaurant(restaurant)\n                }\n            )\n    }\n\n    setRestaurant(restaurant) {\n        console.log(restaurant);\n        this.restaurant = restaurant;\n    }\n\n    edit() {\n        localStorage.setItem('restaurant_edit', JSON.stringify(this.restaurant));\n        this.router.navigate(['/restaurants-form', { id: this.restaurant.id }])\n    }\n\n    delete(content) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result == 'delete') {\n                    this.restaurantsService\n                        .deleteRestaurant(localStorage.getItem('access_token'), this.restaurant.id)\n                        .subscribe(\n                            res => { this.router.navigate(['/menus-list', { message: 'Restaurante inativado com sucesso!' }]) },\n                            err => { this.showAlert('danger', err) }\n                        )\n                }\n            });\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        )\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n\n    restoreRestaurant(restaurant) {\n        this.restaurantsService\n            .restoreRestaurant(localStorage.getItem('access_token'), restaurant.id)\n            .subscribe(\n                res => this.router.navigate(['/restaurants-list', { message: 'Restaurante reativado com sucesso!' }])\n            )\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { RestaurantsShowRoutingModule } from './restaurants-show-routing.module';\nimport { RestaurantsShowComponent } from './restaurants-show.component';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DatePipe } from '@angular/common';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        RestaurantsShowRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgbModule.forRoot(),\n        NgxPaginationModule,\n        NgxMaskModule.forRoot()\n    ],\n    declarations: [RestaurantsShowComponent],\n    providers: [DatePipe],\n})\nexport class RestaurantsShowModule {}\n"],"sourceRoot":""}