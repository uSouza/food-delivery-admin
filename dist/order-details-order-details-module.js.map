{"version":3,"sources":["webpack:///./src/app/layout/order-details/order-details-routing.module.ts","webpack:///./src/app/layout/order-details/order-details.component.html","webpack:///./src/app/layout/order-details/order-details.component.scss","webpack:///./src/app/layout/order-details/order-details.component.ts","webpack:///./src/app/layout/order-details/order-details.module.ts"],"names":[],"mappings":"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","file":"order-details-order-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderDetailsComponent } from './order-details.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: OrderDetailsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class OrderDetailsRoutingModule {}\n","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Impressão do pedido</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Deseja imprimir o pedido?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('NoPrint')\\\">Não</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('Print')\\\">Sim</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #reject let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Rejeição do pedido</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Deseja realmente rejeitar o pedido?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('noReject')\\\">Não</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('reject')\\\">Sim</button>\\n    </div>\\n</ng-template>\\n\\n<div class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n            <h2>\\n                Pedido nº {{order.id}}\\n            </h2>\\n            <h3 *ngIf=\\\"user.type=='admin'\\\">\\n                <strong>Restaurante: </strong>{{ order.company.fantasy_name }}\\n            </h3>\\n        </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-6\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    Dados do cliente\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\"><strong>Nome: </strong>{{ order.client.name }}</h5>\\n                    <p class=\\\"card-text\\\"><strong>Celular: </strong>{{ order.client.cell_phone }}</p>\\n                    <p class=\\\"card-text\\\"><strong>Dispositivo: </strong>{{ order.platform }}</p>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"order.deliver\\\" class=\\\"col-xl-6\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    Dados de entrega\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p class=\\\"card-text\\\"><strong>Endereço: </strong>{{ order.location.address }} - {{\\n                        order.location.number }}</p>\\n                    <p class=\\\"card-text\\\"><strong>Bairro: </strong>{{ order.location.district.name }}</p>\\n                    <p class=\\\"card-text\\\"><strong>Observações: </strong>{{ order.location.observation }}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    Marmitas\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\" *ngFor=\\\"let product of order.products\\\">\\n                        <div class=\\\"col-xl-6\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-header\\\">\\n                                    {{ product.menu.description }}\\n                                </div>\\n                                <div class=\\\"card-body\\\">\\n                                    <p class=\\\"card-text\\\"><strong>Marmita: </strong>{{ product.price.size }} - {{\\n                                        product.price.price | currency: 'BRL': true }}</p>\\n                                    <p class=\\\"card-text\\\"><strong>Data do cardápio: </strong>{{ product.menu.date |\\n                                        date:'dd/MM/yyyy'}}</p>\\n                                    <div class=\\\"card-text\\\">\\n                                        <button class=\\\"btn btn-default\\\" (click)=\\\"seeIngredients(product)\\\">\\n                                            {{ product.textIngredients }}\\n                                        </button>\\n                                        <div *ngIf=\\\"product.seeIngredients\\\">\\n                                            <div style=\\\"margin-top: 10px\\\" class=\\\"card card-body\\\">\\n                                                <ul>\\n                                                    <li *ngFor=\\\"let ingredient of product.ingredients\\\">\\n                                                        {{ ingredient.name }}\\n                                                    </li>\\n                                                </ul>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div style=\\\"margin-top: 10px\\\" class=\\\"card-text\\\">\\n                                        <button *ngIf=\\\"product.additionals.length > 0\\\" class=\\\"btn btn-default\\\"\\n                                            (click)=\\\"seeAdditionals(product)\\\">\\n                                            {{ product.textAdditionals }}\\n                                        </button>\\n                                        <div *ngIf=\\\"product.seeAdditionals\\\">\\n                                            <div style=\\\"margin-top: 10px\\\" class=\\\"card card-body\\\">\\n                                                <ul>\\n                                                    <li *ngFor=\\\"let add of product.additionals\\\">\\n                                                        <p>\\n                                                            {{ add.name }}\\n                                                        </p>\\n                                                        <p style=\\\"font-size: small; margin-top: -20px\\\">\\n                                                            quantidade: {{ add.pivot.quantity }}\\n                                                        </p>\\n                                                        <p style=\\\"font-size: small; margin-top: -20px\\\">\\n                                                            preço unitário: {{ add.value | currency: 'BRL': true }}\\n                                                        </p>\\n                                                        <p style=\\\"font-size: small; margin-top: -20px\\\">\\n                                                            total: {{ add.value * add.pivot.quantity | currency: 'BRL':\\n                                                            true }}\\n                                                        </p>\\n                                                    </li>\\n                                                </ul>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    Dados gerais do pedido\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\"><strong>Preço: </strong>{{ order.price | currency: 'BRL': true}}</h5>\\n                    <p class=\\\"card-text\\\"><strong>Forma de pagamento: </strong>{{ order.form_payment.description }}</p>\\n                    <p *ngIf=\\\"order.status_id == 1 || order.status_id == 3\\\" class=\\\"card-text\\\"><strong>Status:\\n                        </strong>pendente\\n                        de confirmação</p>\\n                    <p *ngIf=\\\"order.freight_id != null\\\" class=\\\"card-text\\\"><strong>Valor de entrega: </strong>{{\\n                        order.freight.value | currency: 'BRL': true }}</p>\\n                    <p *ngIf=\\\"order.deliver && order.time_delivery == null\\\" class=\\\"card-text\\\"><strong>Horário de\\n                            entrega: </strong>{{ order.receive_at | date: 'dd/MM/yyy hh:mm' }}</p>\\n                    <p *ngIf=\\\"!order.deliver && order.time_delivery == null\\\" class=\\\"card-text\\\"><strong>Horário de\\n                            retirada: </strong>{{ order.receive_at | date: 'dd/MM/yyy hh:mm' }}</p>\\n                    <p *ngIf=\\\"order.deliver && order.time_delivery != null\\\" class=\\\"card-text\\\"><strong>Entregar em:\\n                        </strong>{{ order.time_delivery }}</p>\\n                    <p *ngIf=\\\"!order.deliver && order.time_delivery != null\\\" class=\\\"card-text\\\"><strong>Retirar em:\\n                        </strong>{{ order.time_delivery }}</p>\\n                    <p class=\\\"card-text\\\"><strong>Observações: </strong>{{ order.observation }}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12 text-right\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg btn-default\\\" style=\\\"margin-right: 10px\\\"\\n                routerLink=\\\"/dashboard\\\">Voltar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg btn-warning\\\" (click)=\\\"copyToclipboard()\\\"\\n                style=\\\"margin-right: 10px\\\">Copiar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"sendWhatsApp()\\\"\\n                style=\\\"margin-right: 10px\\\">WhatsApp</button>\\n            <button *ngIf=\\\"order.status_id == 1\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-danger\\\"\\n                (click)=\\\"refuseOrder(reject)\\\" style=\\\"margin-right:10px\\\">Rejeitar</button>\\n            <button *ngIf=\\\"order.status_id == 1\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\"\\n                (click)=\\\"confirm(content)\\\">Confirmar</button>\\n            <button *ngIf=\\\"order.status_id == 2\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\"\\n                (click)=\\\"printOrder()\\\">Imprimir</button>\\n        </div>\\n    </div>\\n</div>\\n\\n<div style=\\\"display: none;\\\" id=\\\"print-section\\\">\\n    <h2>Pedido nº {{order.id}}</h2>\\n    <div>\\n        <h3>Dados do cliente</h3>\\n        <p style=\\\"font-size: small\\\"><strong>Nome: </strong>{{ order.client.name }}</p>\\n        <p style=\\\"font-size: small\\\"><strong>Celular: </strong>{{ order.client.cell_phone }}</p>\\n        <p style=\\\"font-size: small\\\"><strong>Dispositivo: </strong>{{ order.platform }}</p>\\n    </div>\\n    <div>\\n        <h3>Dados de entrega</h3>\\n        <p style=\\\"font-size: small\\\"><strong>Endereço: </strong>{{ order.location.address }} - {{ order.location.number\\n            }}</p>\\n        <p style=\\\"font-size: small\\\"><strong>Bairro: </strong>{{ order.location.district }}</p>\\n        <p style=\\\"font-size: small\\\"><strong>Observações: </strong>{{ order.location.observation }}</p>\\n    </div>\\n    <div>\\n        <h3>Marmitas</h3>\\n        <div *ngFor=\\\"let product of order.products\\\">\\n            <h4>{{ product.menu.description }}</h4>\\n            <p style=\\\"font-size: small\\\"><strong>Marmita: </strong>{{ product.price.size }} - {{ product.price.price |\\n                currency: 'BRL': true }}</p>\\n            <p style=\\\"font-size: small\\\"><strong>Data do cardápio: </strong>{{ product.menu.date | date:'dd/MM/yyyy'}}\\n            </p>\\n            <p style=\\\"font-size: small\\\"><strong>Ingredientes: </strong></p>\\n            <ul>\\n                <li style=\\\"font-size: small\\\" *ngFor=\\\"let ingredient of product.ingredients\\\">\\n                    {{ ingredient.name }}\\n                </li>\\n            </ul>\\n            <div *ngIf=\\\"product.additionals.length > 0\\\">\\n                <p style=\\\"font-size: small\\\"><strong>Adicionais: </strong></p>\\n                <ul>\\n                    <li style=\\\"font-size: small\\\" *ngFor=\\\"let add of product.additionals\\\">\\n                        <p style=\\\"font-size: small\\\">\\n                            {{ add.name }}\\n                        </p>\\n                        <p style=\\\"font-size: small; margin-top: -15px\\\">\\n                            quantidade: {{ add.pivot.quantity }}\\n                        </p>\\n                        <p style=\\\"font-size: small; margin-top: -15px\\\">\\n                            preço unitário: {{ add.value | currency: 'BRL': true }}\\n                        </p>\\n                        <p style=\\\"font-size: small; margin-top: -15px\\\">\\n                            total: {{ add.value * add.pivot.quantity | currency: 'BRL': true }}\\n                        </p>\\n                    </li>\\n                </ul>\\n            </div>\\n            <hr>\\n        </div>\\n    </div>\\n    <div>\\n        <h3>Dados gerais do pedido</h3>\\n        <p style=\\\"font-size: small\\\"><strong>Preço: </strong>{{ order.price | currency: 'BRL': true}}</p>\\n        <p style=\\\"font-size: small\\\"><strong>Forma de pagamento: </strong>{{ order.form_payment.description }}</p>\\n        <p style=\\\"font-size: small\\\" *ngIf=\\\"order.deliver && order.company.delivery_value > 0\\\"><strong>Valor de entrega:\\n            </strong>{{ order.company.delivery_value | currency: 'BRL': true }}</p>\\n        <p style=\\\"font-size: small\\\" *ngIf=\\\"order.deliver\\\"><strong>Horário de entrega: </strong>{{ order.receive_at |\\n            date: 'dd/MM/yyy hh:mm' }}</p>\\n        <p style=\\\"font-size: small\\\" *ngIf=\\\"!order.deliver\\\"><strong>Horário de retirada: </strong>{{ order.receive_at |\\n            date: 'dd/MM/yyy hh:mm' }}</p>\\n    </div>\\n</div>\"","module.exports = \".row {\\n  margin-top: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../services/orders/orders.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { LoginService } from '../../services/login/login.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n    selector: 'app-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss']\n})\nexport class OrderDetailsComponent implements OnInit {\n\n    order: any;\n    closeResult: string;\n    user: any;\n\n    constructor(public route: ActivatedRoute,\n        private router: Router,\n        private ordersService: OrdersService,\n        private loginService: LoginService,\n        private _clipboardService: ClipboardService,\n        public datepipe: DatePipe,\n        private modalService: NgbModal) { }\n\n    ngOnInit() {\n        if (localStorage.getItem('access_token') != null) {\n            this.loginService\n                .user_me(localStorage.getItem('access_token'))\n                .subscribe(\n                    user => {\n                        this.user = user;\n                    }\n                );\n            this.getOrder();\n        } else {\n            this.router.navigate(['/login']);\n        }\n\n    }\n\n    getOrder() {\n        this.ordersService\n            .getOrder(localStorage.getItem('access_token'), this.route.snapshot.paramMap.get('id'))\n            .subscribe(\n                order => {\n                    this.setOrder(order);\n                    console.log(order);\n                }\n            );\n    }\n\n    setOrder(order) {\n        order.products.forEach((p) => {\n            p.textIngredients = 'Ver ingredientes';\n            p.textAdditionals = 'Ver adicionais';\n        });\n        console.log(order);\n        this.order = order;\n    }\n\n    seeIngredients(product) {\n        if (product.seeIngredients) {\n            product.seeIngredients = false;\n            product.textIngredients = 'Ver ingredientes';\n        } else {\n            product.seeIngredients = true;\n            product.textIngredients = 'Ocultar ingredientes';\n        }\n    }\n\n    seeAdditionals(product) {\n        if (product.seeAdditionals) {\n            product.seeAdditionals = false;\n            product.textAdditionals = 'Ver adicionais';\n        } else {\n            product.seeAdditionals = true;\n            product.textAdditionals = 'Ocultar adicionais';\n        }\n    }\n\n    confirm(content) {\n        console.log(content);\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result === 'Print') {\n                    this.printOrder();\n                } else {\n                    this.confirmOrder();\n                }\n            });\n    }\n\n    printOrder() {\n        let printContents, popupWin;\n        printContents = document.getElementById('print-section').innerHTML;\n        popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n        popupWin.document.open();\n        popupWin.document.write(`\n            <html>\n                <head>\n                    <title>Impressão do pedido ${this.order.id}</title>\n                    <style>\n                    </style>\n                </head>\n                <body onload=\"window.print();window.close()\">${printContents}</body>\n            </html>`\n        );\n        popupWin.document.close();\n        this.confirmOrder();\n    }\n\n    confirmOrder() {\n        if (this.order.status_id === 1) {\n            this.order.status_id = 2;\n            this.ordersService\n                .updateOrder(localStorage.getItem('access_token'), this.order)\n                .subscribe(\n                    () => {\n                        this.router.navigate(['/dashboard', { message: 'Pedido confirmado com sucesso!' }]);\n                    }\n                );\n        }\n\n    }\n\n    refuseOrder(content) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result === 'reject') {\n                    this.order.status_id = 4;\n                    this.ordersService\n                        .updateOrder(localStorage.getItem('access_token'), this.order)\n                        .subscribe(\n                            () => {\n                                this.router.navigate(['/dashboard', { message: 'Pedido rejeitado com sucesso!' }]);\n                            }\n                        );\n                }\n            });\n    }\n\n    sendWhatsApp() {\n        window.location.href = `https://api.whatsapp.com/send?phone=55${this.order.company.cell_phone}&text=${this.getOrderFormat()}`;\n    }\n\n    copyToclipboard() {\n        this._clipboardService.copyFromContent(this.getOrderFormat());\n    }\n\n    getOrderFormat() {\n        const dadosCliente = '*DADOS DO CLIENTE* \\n' + 'NOME: ' + this.order.client.name\n            + '\\nCELULAR: ' + this.order.client.cell_phone;\n        let dadosEntrega = null;\n        if (this.order.location.observation == null) {\n            this.order.location.observation = '';\n        }\n        if (this.order.deliver) {\n            dadosEntrega = '\\n\\n*DADOS PARA ENTREGA* \\n' + 'ENDEREÇO: '\n                + this.order.location.address + ' - ' + this.order.location.number\n                + '\\nBAIRRO: ' + this.order.location.district.name + '\\nCOMPLEMENTO: '\n                + this.order.location.observation + '\\n';\n        } else {\n            dadosEntrega = '\\n\\n*CLIENTE VEM BUSCAR O PEDIDO*\\n';\n        }\n        let dadosMarmita = '';\n        let count = 1;\n        this.order.products.forEach((p) => {\n            dadosMarmita = dadosMarmita + '\\n*MARMITA (' + count + '):*' + '\\nTAMANHO: ' + p.price.size\n                + ' - R$' + p.price.price + '\\nINGREDIENTES: ';\n            p.ingredients.forEach(i => {\n                dadosMarmita = dadosMarmita + i.name + ';';\n            });\n            if (p.additionals.length > 0) {\n                dadosMarmita = dadosMarmita + '\\nADICIONAIS ';\n                p.additionals.forEach(add => {\n                    dadosMarmita = dadosMarmita + '\\n' + add.name\n                        + ' - Qtd: ' + add.pivot.quantity + ' - Total: R$'\n                        + (add.value * add.pivot.quantity) + '\\n';\n                });\n            }\n            ++count;\n        });\n\n        let freight = null;\n\n        if (this.order.freight == null || this.order.freight.value === 0) {\n            freight = 'gratuito';\n        } else {\n            freight = `R$ ${this.order.freight.value}`;\n        }\n\n        const dadosGerais = '\\n*DADOS GERAIS DO PEDIDO*\\n' + 'PREÇO: R$' + this.order.price\n            + '\\nFORMA PAGAMENTO: ' + this.order.form_payment.description\n            + '\\nVALOR ENTREGA: ' + freight\n            + '\\nHORÁRIO DE ENTREGA: ' + this.datepipe.transform(this.order.receive_at, 'HH:mm')\n            + '\\nOBSERVAÇÕES: ' + this.order.observation;\n        return '*PEDIDO REALIZADO PELO PANDECO!* 🚀🚀🚀🚀\\n\\n'\n            + dadosCliente + dadosEntrega + dadosMarmita\n            + dadosGerais;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ClipboardModule } from 'ngx-clipboard';\n\nimport { OrderDetailsRoutingModule } from './order-details-routing.module';\nimport { OrderDetailsComponent } from './order-details.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        OrderDetailsRoutingModule,\n        ClipboardModule\n        ],\n    declarations: [OrderDetailsComponent]\n})\nexport class OrderDetailsModule {}\n"],"sourceRoot":""}