{"version":3,"sources":["webpack:///./src/app/layout/order-details/order-details-routing.module.ts","webpack:///./src/app/layout/order-details/order-details.component.html","webpack:///./src/app/layout/order-details/order-details.component.scss","webpack:///./src/app/layout/order-details/order-details.component.ts","webpack:///./src/app/layout/order-details/order-details.module.ts"],"names":[],"mappings":"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","file":"order-details-order-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderDetailsComponent } from './order-details.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: OrderDetailsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class OrderDetailsRoutingModule {}\n","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Impressão do pedido</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Deseja imprimir o pedido?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('NoPrint')\\\">Não</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('Print')\\\">Sim</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #reject let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Rejeição do pedido</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <p>Deseja realmente rejeitar o pedido?</p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('noReject')\\\">Não</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('reject')\\\">Sim</button>\\n        </div>\\n</ng-template>\\n\\n<div class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n            <h2>\\n                Pedido nº {{order.id}}\\n            </h2>\\n        </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-6\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                  Dados do cliente\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                  <h5 class=\\\"card-title\\\"><strong>Nome: </strong>{{ order.client.name }}</h5>\\n                  <p class=\\\"card-text\\\"><strong>Celular: </strong>{{ order.client.cell_phone }}</p>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"order.deliver\\\" class=\\\"col-xl-6\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                  Dados de entrega\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                  <p class=\\\"card-text\\\"><strong>Endereço: </strong>{{ order.location.address }} - {{ order.location.number }}</p>\\n                  <p class=\\\"card-text\\\"><strong>Bairro: </strong>{{ order.location.district }}</p>\\n                  <p class=\\\"card-text\\\"><strong>Observações: </strong>{{ order.location.observation }}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                  Marmitas\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\" *ngFor=\\\"let product of order.products\\\">\\n                        <div class=\\\"col-xl-6\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-header\\\">\\n                                    {{ product.menu.description }}\\n                                </div>\\n                                <div class=\\\"card-body\\\">\\n                                    <p class=\\\"card-text\\\"><strong>Marmita: </strong>{{ product.price.size }} - {{ product.price.price | currency: 'BRL': true }}</p>\\n                                    <p class=\\\"card-text\\\"><strong>Data do cardápio: </strong>{{ product.menu.date | date:'dd/MM/yyyy'}}</p>\\n                                    <div class=\\\"card-text\\\">\\n                                        <button  class=\\\"btn btn-default\\\"\\n                                            (click)=\\\"seeIngredients(product)\\\">\\n                                            {{ product.textIngredients }}\\n                                        </button>\\n                                        <div *ngIf=\\\"product.seeIngredients\\\">\\n                                            <div style=\\\"margin-top: 10px\\\" class=\\\"card card-body\\\">\\n                                                <ul>\\n                                                    <li *ngFor=\\\"let ingredient of product.ingredients\\\">\\n                                                        {{ ingredient.name }}\\n                                                    </li>\\n                                                </ul>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div style=\\\"margin-top: 10px\\\" class=\\\"card-text\\\">\\n                                        <button *ngIf=\\\"product.additionals.length > 0\\\" class=\\\"btn btn-default\\\"\\n                                            (click)=\\\"seeAdditionals(product)\\\">\\n                                            {{ product.textAdditionals }}\\n                                        </button>\\n                                        <div *ngIf=\\\"product.seeAdditionals\\\">\\n                                            <div style=\\\"margin-top: 10px\\\" class=\\\"card card-body\\\">\\n                                                <ul>\\n                                                    <li *ngFor=\\\"let add of product.additionals\\\">\\n                                                        <p>\\n                                                            {{ add.name }}\\n                                                        </p>\\n                                                        <p style=\\\"font-size: small; margin-top: -20px\\\">\\n                                                            quantidade: {{ add.pivot.quantity }}\\n                                                        </p>\\n                                                        <p style=\\\"font-size: small; margin-top: -20px\\\">\\n                                                            preço unitário: {{ add.value | currency: 'BRL': true }}\\n                                                        </p>\\n                                                        <p style=\\\"font-size: small; margin-top: -20px\\\">\\n                                                            total: {{ add.value * add.pivot.quantity | currency: 'BRL': true }}\\n                                                        </p>\\n                                                    </li>\\n                                                </ul>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        Dados gerais do pedido\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <h5 class=\\\"card-title\\\"><strong>Preço: </strong>{{ order.price | currency: 'BRL': true}}</h5>\\n                        <p class=\\\"card-text\\\"><strong>Forma de pagamento: </strong>{{ order.form_payment.description }}</p>\\n                        <p *ngIf=\\\"order.status_id == 1 || order.status_id == 3\\\" class=\\\"card-text\\\"><strong>Status: </strong>pendente de confirmação</p>\\n                        <p *ngIf=\\\"order.deliver && order.company.delivery_value > 0\\\" class=\\\"card-text\\\"><strong>Valor de entrega: </strong>{{ order.company.delivery_value | currency: 'BRL': true }}</p>\\n                        <p *ngIf=\\\"order.deliver\\\" class=\\\"card-text\\\"><strong>Horário de entrega: </strong>{{ order.receive_at | date: 'dd/MM/yyy hh:mm' }}</p>\\n                        <p *ngIf=\\\"!order.deliver\\\" class=\\\"card-text\\\"><strong>Horário de retirada: </strong>{{ order.receive_at | date: 'dd/MM/yyy hh:mm' }}</p>\\n                        <p class=\\\"card-text\\\"><strong>Observações: </strong>{{ order.observation }}</p>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12 text-right\\\">\\n            <button *ngIf=\\\"order.status_id == 1\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-danger\\\" (click)=\\\"refuseOrder(reject)\\\" style=\\\"margin-right:10px\\\">Rejeitar</button>\\n            <button *ngIf=\\\"order.status_id == 1\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"confirm(content)\\\">Confirmar</button>\\n            <button *ngIf=\\\"order.status_id == 2\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"printOrder()\\\">Imprimir</button>\\n        </div>\\n    </div>\\n</div>\\n\\n<div style=\\\"display: none;\\\" id=\\\"print-section\\\">\\n    <h2>Pedido nº {{order.id}}</h2>\\n    <div>\\n        <h3>Dados do cliente</h3>\\n        <p style=\\\"font-size: small\\\"><strong>Nome: </strong>{{ order.client.name }}</p>\\n        <p style=\\\"font-size: small\\\"><strong>Celular: </strong>{{ order.client.cell_phone }}</p>\\n    </div>\\n    <div>\\n        <h3>Dados de entrega</h3>\\n        <p style=\\\"font-size: small\\\"><strong>Endereço: </strong>{{ order.location.address }} - {{ order.location.number }}</p>\\n        <p style=\\\"font-size: small\\\"><strong>Bairro: </strong>{{ order.location.district }}</p>\\n        <p style=\\\"font-size: small\\\"><strong>Observações: </strong>{{ order.location.observation }}</p>\\n    </div>\\n    <div>\\n        <h3>Marmitas</h3>\\n        <div *ngFor=\\\"let product of order.products\\\">\\n            <h4>{{ product.menu.description }}</h4>\\n            <p style=\\\"font-size: small\\\"><strong>Marmita: </strong>{{ product.price.size }} - {{ product.price.price | currency: 'BRL': true }}</p>\\n            <p style=\\\"font-size: small\\\"><strong>Data do cardápio: </strong>{{ product.menu.date | date:'dd/MM/yyyy'}}</p>\\n            <p style=\\\"font-size: small\\\"><strong>Ingredientes: </strong></p>\\n            <ul>\\n                <li style=\\\"font-size: small\\\" *ngFor=\\\"let ingredient of product.ingredients\\\">\\n                    {{ ingredient.name }}\\n                </li>\\n            </ul>\\n            <div *ngIf=\\\"product.additionals.length > 0\\\">\\n                <p style=\\\"font-size: small\\\"><strong>Adicionais: </strong></p>\\n                <ul>\\n                    <li style=\\\"font-size: small\\\" *ngFor=\\\"let add of product.additionals\\\">\\n                        <p style=\\\"font-size: small\\\">\\n                            {{ add.name }}\\n                        </p>\\n                        <p style=\\\"font-size: small; margin-top: -15px\\\">\\n                            quantidade: {{ add.pivot.quantity }}\\n                        </p>\\n                        <p style=\\\"font-size: small; margin-top: -15px\\\">\\n                            preço unitário: {{ add.value | currency: 'BRL': true }}\\n                        </p>\\n                        <p style=\\\"font-size: small; margin-top: -15px\\\">\\n                            total: {{ add.value * add.pivot.quantity | currency: 'BRL': true }}\\n                        </p>\\n                    </li>\\n                </ul>\\n            </div>\\n            <hr>\\n        </div>\\n    </div>\\n    <div>\\n        <h3>Dados gerais do pedido</h3>\\n        <p style=\\\"font-size: small\\\"><strong>Preço: </strong>{{ order.price | currency: 'BRL': true}}</p>\\n        <p style=\\\"font-size: small\\\"><strong>Forma de pagamento: </strong>{{ order.form_payment.description }}</p>\\n        <p style=\\\"font-size: small\\\" *ngIf=\\\"order.deliver && order.company.delivery_value > 0\\\"><strong>Valor de entrega: </strong>{{ order.company.delivery_value | currency: 'BRL': true }}</p>\\n        <p style=\\\"font-size: small\\\" *ngIf=\\\"order.deliver\\\"><strong>Horário de entrega: </strong>{{ order.receive_at | date: 'dd/MM/yyy hh:mm' }}</p>\\n        <p style=\\\"font-size: small\\\" *ngIf=\\\"!order.deliver\\\"><strong>Horário de retirada: </strong>{{ order.receive_at | date: 'dd/MM/yyy hh:mm' }}</p>\\n    </div>\\n</div>\\n\\n\"","module.exports = \".row {\\n  margin-top: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../services/orders/orders.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.scss']\n})\nexport class OrderDetailsComponent implements OnInit {\n\n    order: any;\n    closeResult: string;\n\n    constructor(public route: ActivatedRoute,\n                private router: Router,\n                private ordersService: OrdersService,\n                private modalService: NgbModal) { }\n\n    ngOnInit() {\n        if (localStorage.getItem('access_token') != null) {\n            this.getOrder();\n        } else {\n            this.router.navigate(['/login']);\n        }\n\n    }\n\n    getOrder() {\n        this.ordersService\n        .getOrder(localStorage.getItem('access_token'), this.route.snapshot.paramMap.get('id'))\n        .subscribe(\n            order => {\n                this.setOrder(order)\n            }\n        )\n    }\n\n    setOrder(order) {\n        order.products.forEach((p) => {\n            p.textIngredients = 'Ver ingredientes';\n            p.textAdditionals = 'Ver adicionais';\n        });\n        console.log(order);\n        this.order = order;\n    }\n\n    seeIngredients(product) {\n        if (product.seeIngredients == true) {\n            product.seeIngredients = false;\n            product.textIngredients = 'Ver ingredientes'\n        } else {\n            product.seeIngredients = true;\n            product.textIngredients = 'Ocultar ingredientes'\n        }\n    }\n\n    seeAdditionals(product) {\n        if (product.seeAdditionals == true) {\n            product.seeAdditionals = false;\n            product.textAdditionals = 'Ver adicionais'\n        } else {\n            product.seeAdditionals = true;\n            product.textAdditionals = 'Ocultar adicionais'\n        }\n    }\n\n    confirm(content) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result == 'Print') {\n                    this.printOrder();\n                } else {\n                    this.confirmOrder();\n                }\n            });\n    }\n\n    printOrder() {\n        let printContents, popupWin;\n        printContents = document.getElementById('print-section').innerHTML;\n        popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n        popupWin.document.open();\n        popupWin.document.write(`\n            <html>\n                <head>\n                    <title>Impressão do pedido ${this.order.id}</title>\n                    <style>\n                    </style>\n                </head>\n                <body onload=\"window.print();window.close()\">${printContents}</body>\n            </html>`\n        );\n        popupWin.document.close();\n        this.confirmOrder();\n    }\n\n    confirmOrder() {\n        if (this.order.status_id == 1) {\n            this.order.status_id = 2;\n            this.ordersService\n                .updateOrder(localStorage.getItem('access_token'), this.order)\n                .subscribe(\n                    order => {\n                        this.router.navigate(['/dashboard', { message: 'Pedido confirmado com sucesso!' }]);\n                    }\n                )\n        }\n\n    }\n\n    refuseOrder(content) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result == 'reject') {\n                    this.order.status_id = 4;\n                    this.ordersService\n                        .updateOrder(localStorage.getItem('access_token'), this.order)\n                        .subscribe(\n                            order => {\n                                this.router.navigate(['/dashboard', { message: 'Pedido rejeitado com sucesso!' }]);\n                            }\n                        )\n                }\n            });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { OrderDetailsRoutingModule } from './order-details-routing.module';\nimport { OrderDetailsComponent } from './order-details.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        OrderDetailsRoutingModule,\n        ],\n    declarations: [OrderDetailsComponent]\n})\nexport class OrderDetailsModule {}\n"],"sourceRoot":""}