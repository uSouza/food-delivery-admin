{"version":3,"sources":["webpack:///./src/app/layout/ingredient-groups/ingredient-groups-form/ingredient-groups-form-routing.module.ts","webpack:///./src/app/layout/ingredient-groups/ingredient-groups-form/ingredient-groups-form.component.html","webpack:///./src/app/layout/ingredient-groups/ingredient-groups-form/ingredient-groups-form.component.scss","webpack:///./src/app/layout/ingredient-groups/ingredient-groups-form/ingredient-groups-form.component.ts","webpack:///./src/app/layout/ingredient-groups/ingredient-groups-form/ingredient-groups-form.module.ts"],"names":[],"mappings":"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","file":"ingredient-groups-ingredient-groups-form-ingredient-groups-form-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IngredientGroupsFormComponent } from './ingredient-groups-form.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: IngredientGroupsFormComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class IngredientGroupsFormRoutingModule {}\n","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Exclusão de grupo</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Tem certeza de que deseja excluir o grupo de ingrediente?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('dismiss')\\\">Não</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('delete')\\\">Sim</button>\\n    </div>\\n</ng-template>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n        <h3>Gerenciamento de grupo de ingrediente</h3>\\n        <hr>\\n        <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n        <form role=\\\"form\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-7\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Nome do grupo</label>\\n                        <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-5\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Qtd. opções do grupo</label>\\n                        <input [(ngModel)]=\\\"number_options\\\" name=\\\"number_options\\\" class=\\\"form-control\\\" type=\\\"number\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xl-12 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn btn-success\\\" (click)=\\\"addIngredientGroup()\\\">Adicionar</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n        <hr>\\n        <table *ngIf=\\\"ingredients_groups.length > 0\\\" class=\\\"card-body table\\\">\\n            <thead>\\n               <tr>\\n                  <th>Nome</th>\\n                  <th>Qtd. de opções</th>\\n                  <th>Ações</th>\\n               </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let ingredient_group of ingredients_groups  | paginate: { itemsPerPage: 4, currentPage: page }\\\">\\n               <tr class=\\\"table-default\\\">\\n                  <td>{{ingredient_group.name}}</td>\\n                  <td>{{ingredient_group.number_options}}</td>\\n                  <td>\\n                     <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"editIngredientGroup(ingredient_group)\\\">Editar</button>\\n                     <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteIngredientGroup(content, ingredient_group)\\\">Deletar</button>\\n                  </td>\\n               </tr>\\n            </tbody>\\n         </table>\\n         <div class=\\\"has-text-centered\\\">\\n            <pagination-controls (pageChange)=\\\"page = $event\\\" previousLabel=\\\"Anterior\\\" nextLabel=\\\"Próximo\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"form {\\n  margin-top: 20px; }\\n\\n.btn-sm {\\n  margin-left: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IngredientGroupsService } from '../../../services/ingredient-groups/ingredient-groups.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-ingredient-groups-form',\n  templateUrl: './ingredient-groups-form.component.html',\n  styleUrls: ['./ingredient-groups-form.component.scss']\n})\nexport class IngredientGroupsFormComponent implements OnInit {\n\n    public alerts: Array<any> = [];\n\n    name: any = null;\n    ingredient_group_edit: any = null;\n    number_options: any = null;\n    ingredients_groups: any[] = [];\n    page: number = 1;\n\n    constructor(public route: ActivatedRoute,\n                private router: Router,\n                private ingredientGroupService: IngredientGroupsService,\n                private modalService: NgbModal\n                ) { }\n\n    ngOnInit() {\n\n        if (localStorage.getItem('access_token') != null) {\n            this.ingredientGroupService\n                .getIngredientsGroups(localStorage.getItem('access_token'))\n                .subscribe(\n                    ingredients_groups => {\n                        this.ingredients_groups = ingredients_groups\n                    })\n        } else {\n            this.router.navigate(['/login']);\n        }\n\n    }\n\n    addIngredientGroup() {\n        if (this.validate()) {\n            let ingredient_group = {\n                name: this.name,\n                number_options: this.number_options\n            }\n            if (this.ingredient_group_edit == null) {\n                this.ingredientGroupService\n                .addIngredientGroup(localStorage.getItem('access_token'), ingredient_group)\n                .subscribe(\n                    ingredient_group => {\n                        this.updateIngredientGroups(ingredient_group, false)\n                    }\n                )\n            } else {\n                this.ingredientGroupService\n                .editIngredientGroup(localStorage.getItem('access_token'), ingredient_group, this.ingredient_group_edit.id)\n                .subscribe(\n                    ingredient_group => {\n                        this.updateIngredientGroups(ingredient_group, true)\n                    }\n                )\n            }\n\n        }\n    }\n\n    updateIngredientGroups(ingredient_group, edit) {\n        this.name = null;\n        this.number_options = null;\n        this.ingredients_groups.push(ingredient_group);\n        if (edit) {\n            this.showAlert('success', 'Grupo de ingrediente atualizado com sucesso!');\n            const index: number = this.ingredients_groups.indexOf(this.ingredient_group_edit);\n            this.ingredients_groups.splice(index, 1);\n            this.ingredient_group_edit = null;\n        } else {\n            this.showAlert('success', 'Grupo de ingrediente adicionado com sucesso!');\n        }\n\n    }\n\n    validate() {\n        if (this.name == null) {\n            this.showAlert('danger', 'Informe o nome do grupo de ingrediente!');\n            return false;\n        } else if (this.number_options == null) {\n            this.showAlert('danger', 'Informe o número de opções para o grupo de ingrediente!');\n            return false;\n        } else if (this.number_options <= 0) {\n            this.showAlert('danger', 'O número de opções não deve ser menor ou igual a zero!');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        )\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n\n    editIngredientGroup(ingredient_group) {\n        this.name = ingredient_group.name;\n        this.number_options = ingredient_group.number_options;\n        this.ingredient_group_edit = ingredient_group;\n    }\n\n    deleteIngredientGroup(content, ingredient_group) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result == 'delete') {\n                    const index: number = this.ingredients_groups.indexOf(ingredient_group);\n                    this.ingredients_groups.splice(index, 1);\n                    this.ingredientGroupService\n                        .deleteIngredientGroup(localStorage.getItem('access_token'), ingredient_group.id)\n                        .subscribe(\n                            res => {\n                                console.log(res)\n                            }\n                        )\n                }\n            });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { IngredientGroupsFormRoutingModule } from './ingredient-groups-form-routing.module';\nimport { IngredientGroupsFormComponent } from './ingredient-groups-form.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IngredientGroupsFormRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgxPaginationModule\n        ],\n    declarations: [IngredientGroupsFormComponent]\n})\nexport class IngredientGroupsFormModule {}\n"],"sourceRoot":""}