{"version":3,"sources":["webpack:///./src/app/layout/menus/menu.ts","webpack:///./src/app/layout/menus/menus-form/menus-form-routing.module.ts","webpack:///./src/app/layout/menus/menus-form/menus-form.component.html","webpack:///./src/app/layout/menus/menus-form/menus-form.component.scss","webpack:///./src/app/layout/menus/menus-form/menus-form.component.ts","webpack:///./src/app/layout/menus/menus-form/menus-form.module.ts","webpack:///./src/environments/CustomDatepickerI18n.ts","webpack:///./src/environments/NgbDatePTParserFormatter.ts"],"names":[],"mappings":"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","file":"menus-menus-form-menus-form-module.js","sourcesContent":["export class Menu {\n    id: number;\n    description: string;\n    observation: string;\n    date: string;\n    ingredients_ids: any[];\n    prices_ids: any[];\n    fixed_menu: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MenusFormComponent } from './menus-form.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MenusFormComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MenusFormRoutingModule {}\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n        <h3 *ngIf=\\\"edit\\\">Edi√ß√£o de card√°pio</h3>\\n        <h3 *ngIf=\\\"!edit\\\">Novo card√°pio</h3>\\n        <hr>\\n        <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n        <div class=\\\"ingredients\\\">\\n            <h5>Ingredientes</h5>\\n            <ng-select\\n                [items]=\\\"ingredients | async\\\"\\n                [multiple]=\\\"true\\\"\\n                [closeOnSelect]=\\\"false\\\"\\n                [hideSelected]=\\\"true\\\"\\n                bindLabel=\\\"name\\\"\\n                placeholder=\\\"Selecione os ingredientes\\\"\\n                [(ngModel)]=\\\"selected_ingredients\\\">\\n            </ng-select>\\n        </div>\\n\\n        <div class=\\\"ingredients\\\">\\n                <h5>Tamanhos dispon√≠veis</h5>\\n                <ng-select\\n                    [items]=\\\"sizes | async\\\"\\n                    [multiple]=\\\"true\\\"\\n                    [closeOnSelect]=\\\"false\\\"\\n                    [hideSelected]=\\\"true\\\"\\n                    bindLabel=\\\"size\\\"\\n                    placeholder=\\\"Selecione os tamanhos\\\"\\n                    [(ngModel)]=\\\"selected_sizes\\\">\\n                </ng-select>\\n            </div>\\n            <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-check\\\">\\n                    <input [(ngModel)]=\\\"menu.fixed_menu\\\" name=\\\"fixed_menu\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"defaultCheck1\\\">\\n                    <h5>\\n                      Card√°pio fixo?\\n                    </h5>\\n                  </div>\\n                  </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"! menu.fixed_menu || menu.fixed_menu == null\\\">\\n                    <div class=\\\"col-lg-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                                <h5>Data do card√°pio</h5>\\n                                <div class=\\\"input-group\\\">\\n                                        <input class=\\\"form-control\\\" placeholder=\\\"dd/mm/yyyy\\\"\\n                                               name=\\\"dp\\\" [(ngModel)]=\\\"date\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" (click)=\\\"d.toggle()\\\">\\n                                      </div>\\n                        </div>\\n                    </div>\\n                </div>\\n        <form role=\\\"form\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <h5>Descri√ß√£o</h5>\\n                        <input [(ngModel)]=\\\"menu.description\\\" name=\\\"description\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <h5>Observa√ß√£o</h5>\\n                        <input [(ngModel)]=\\\"menu.observation\\\" name=\\\"observation\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xl-12 text-right\\\">\\n                        <button *ngIf=\\\"!edit\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"addMenu()\\\">Adicionar</button>\\n                        <button *ngIf=\\\"edit\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"addMenu()\\\">Editar</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\\n\"","module.exports = \":host /deep/ .datepicker-input .custom-select {\\n  width: 50%; }\\n\\n#multiselectingredient {\\n  height: 200px !important; }\\n\\n.ingredients {\\n  margin-bottom: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { IngredientsService } from '../../../services/ingredients/ingredients.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { SizesService } from '../../../services/sizes/sizes.service';\nimport { MenusService } from '../../../services/menus/menus.service';\nimport { Menu } from '../menu';\nimport { FormControl } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-menus-form',\n    templateUrl: './menus-form.component.html',\n    styleUrls: ['./menus-form.component.scss']\n})\nexport class MenusFormComponent implements OnInit {\n\n    public alerts: Array<any> = [];\n\n    edit = false;\n    ingredients: Observable<any[]>;\n    selected_ingredients = [];\n    sizes: Observable<any[]>;\n    date: any = null;\n    selected_sizes = [];\n    ingredients_ids: any[] = [];\n    prices_ids: any[] = [];\n    menu: Menu = new Menu();\n    access_token: any = null;\n\n    constructor(public route: ActivatedRoute,\n        private router: Router,\n        private ingredientsService: IngredientsService,\n        private sizesService: SizesService,\n        private menusService: MenusService,\n        public datepipe: DatePipe,\n        private modalService: NgbModal) { }\n\n    ngOnInit() {\n        if (localStorage.getItem('access_token') != null) {\n            this.access_token = localStorage.getItem('access_token');\n            if (this.route.snapshot.paramMap.get('id') != null) {\n                this.edit = true;\n                let menu = JSON.parse(localStorage.getItem('menu_edit'));\n                this.menu = menu;\n                menu.ingredients.forEach((i) => {\n                    this.selected_ingredients.push(i);\n                });\n                menu.prices.forEach((s) => {\n                    this.selected_sizes.push(s);\n                });\n            }\n            this.load();\n        } else {\n            this.router.navigate(['/login']);\n        }\n    }\n\n    load() {\n        this.ingredients = this.ingredientsService.getIngredients(this.access_token);\n        this.sizes = this.sizesService.getSizes(this.access_token);\n    }\n\n    addMenu() {\n        if (this.validate()) {\n            if (this.menu.observation == null) {\n                this.menu.observation = this.menu.description;\n            }\n            this.prepareIds();\n            if (this.menu.fixed_menu) {\n                this.date = '2000-01-01';\n                this.menu.date = '2000-01-01';\n            }\n            if (this.menu.fixed_menu == null) {\n                this.menu.fixed_menu = false;\n            }\n            if (!this.edit) {\n                this.menusService\n                    .addMenu(this.access_token, this.menu)\n                    .subscribe(\n                        menu => this.router.navigate(['/menus-list', { message: 'Menu cadastrado com sucesso!' }])\n                    );\n            } else {\n                this.menusService\n                    .editMenu(this.access_token, this.menu, this.menu.id)\n                    .subscribe(\n                        menu => this.router.navigate(['/menus-list', { message: 'Menu alterado com sucesso!' }])\n                    );\n            }\n        }\n    }\n\n    validate() {\n        const today = new Date();\n        if (this.date != null) {\n            this.menu.date = this.date.year + '-' + this.date.month + '-' + this.date.day;\n        }\n        if (this.selected_ingredients.length < 1) {\n            this.showAlert('danger', 'Selecione os ingredientes da marmita!');\n            return false;\n        } else if (this.selected_sizes.length < 1) {\n            this.showAlert('danger', 'Selecione os tamanhos da marmita!');\n            return false;\n        } else if (this.menu.description == null) {\n            this.showAlert('danger', 'Informe a descri√ß√£o da marmita!');\n            return false;\n        } else if (this.menu.date == null && (!this.menu.fixed_menu || this.menu.fixed_menu == null)) {\n            this.showAlert('danger', 'Informe a data da marmita!');\n            return false;\n        } else if (this.datepipe.transform(today, 'yyyy-MM-dd') > this.menu.date\n            && (!this.menu.fixed_menu || this.menu.fixed_menu == null)) {\n            this.showAlert('danger', 'Informe uma data igual ou posterior a atual!');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    prepareIds() {\n        this.selected_ingredients.forEach((i) => {\n            this.ingredients_ids.push(i.id);\n        });\n        this.selected_sizes.forEach((s) => {\n            this.prices_ids.push(s.id);\n        });\n        this.menu.ingredients_ids = this.ingredients_ids;\n        this.menu.prices_ids = this.prices_ids;\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        );\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MenusFormRoutingModule } from './menus-form-routing.module';\nimport { MenusFormComponent } from './menus-form.component';\nimport {NgxMaskModule} from 'ngx-mask';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {DatePipe} from '@angular/common';\n\nimport { NgbDatepickerConfig, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDatePTParserFormatter } from './../../../../environments/NgbDatePTParserFormatter';\nimport { NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomDatepickerI18n, I18n } from './../../../../environments/CustomDatepickerI18n';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        MenusFormRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgbModule.forRoot(),\n        NgxPaginationModule,\n        NgxMaskModule.forRoot()\n    ],\n    declarations: [MenusFormComponent],\n    providers: [\n        DatePipe,\n        [I18n, { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n }],\n        [{provide: NgbDateParserFormatter, useClass: NgbDatePTParserFormatter}],\n    ],\n})\nexport class MenusFormModule {}\n","import { Component, Injectable } from '@angular/core';\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nconst I18N_VALUES = {\n    'pt-br': {\n        weekdays: ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sab'],\n        months: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\n    },\n};\n\n@Injectable()\nexport class I18n {\n    language = 'pt-br';\n}\n\n@Injectable()\nexport class CustomDatepickerI18n extends NgbDatepickerI18n {\n    constructor(private _i18n: I18n) {\n        super();\n    }\n\n    getWeekdayShortName(weekday: number): string {\n        return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\n    }\n\n    getMonthShortName(month: number): string {\n        return I18N_VALUES[this._i18n.language].months[month - 1];\n    }\n\n    getMonthFullName(month: number): string {\n        return this.getMonthShortName(month);\n    }\n    getDayAriaLabel(day: NgbDateStruct): string {\n        return '';\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nfunction padNumber(value: number) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    } else {\n        return '';\n    }\n}\n\nfunction isNumber(value: any): boolean {\n    return !isNaN(toInteger(value));\n}\n\nfunction toInteger(value: any): number {\n    return parseInt(`${value}`, 10);\n}\n\n@Injectable()\nexport class NgbDatePTParserFormatter extends NgbDateParserFormatter {\n    parse(value: string): NgbDateStruct {\n        if (value) {\n            const dateParts = value.trim().split('/');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return {year: toInteger(dateParts[0]), month: null, day: null};\n            } else if (dateParts.length === 2 && isNumber(dateParts[0])\n                && isNumber(dateParts[1])) {\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\n            } else if (dateParts.length === 3 && isNumber(dateParts[0])\n                && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\n            }\n        }\n        return null;\n    }\n\n    format(date: NgbDateStruct): string {\n        let stringDate: string = '';\n        if (date) {\n            stringDate += isNumber(date.day) ? padNumber(date.day) + '/' : '';\n            stringDate += isNumber(date.month) ? padNumber(date.month) + '/' : '';\n            stringDate += date.year;\n        }\n        return stringDate;\n    }\n}"],"sourceRoot":""}