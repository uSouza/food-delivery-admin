{"version":3,"sources":["webpack:///./src/app/layout/menus/menu.ts","webpack:///./src/app/layout/menus/menus-form/menus-form-routing.module.ts","webpack:///./src/app/layout/menus/menus-form/menus-form.component.html","webpack:///./src/app/layout/menus/menus-form/menus-form.component.scss","webpack:///./src/app/layout/menus/menus-form/menus-form.component.ts","webpack:///./src/app/layout/menus/menus-form/menus-form.module.ts","webpack:///./src/app/providers/menu.ts"],"names":[],"mappings":"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","file":"menus-menus-form-menus-form-module.js","sourcesContent":["export class Menu {\n    id: number;\n    description: string;\n    observation: string;\n    date: string;\n    ingredients_ids: any[];\n    prices_ids: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MenusFormComponent } from './menus-form.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MenusFormComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MenusFormRoutingModule {}\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n        <h3 *ngIf=\\\"edit\\\">Edição de cardápio</h3>\\n        <h3 *ngIf=\\\"!edit\\\">Novo cardápio</h3>\\n        <hr>\\n        <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n        <div class=\\\"ingredients\\\">\\n            <h5>Ingredientes</h5>\\n            <ng-select\\n                [items]=\\\"ingredients | async\\\"\\n                [multiple]=\\\"true\\\"\\n                [closeOnSelect]=\\\"false\\\"\\n                [hideSelected]=\\\"true\\\"\\n                bindLabel=\\\"name\\\"\\n                placeholder=\\\"Selecione os ingredientes\\\"\\n                [(ngModel)]=\\\"selected_ingredients\\\">\\n            </ng-select>\\n        </div>\\n\\n        <div class=\\\"ingredients\\\">\\n                <h5>Tamanhos disponíveis</h5>\\n                <ng-select\\n                    [items]=\\\"sizes | async\\\"\\n                    [multiple]=\\\"true\\\"\\n                    [closeOnSelect]=\\\"false\\\"\\n                    [hideSelected]=\\\"true\\\"\\n                    bindLabel=\\\"size\\\"\\n                    placeholder=\\\"Selecione os tamanhos\\\"\\n                    [(ngModel)]=\\\"selected_sizes\\\">\\n                </ng-select>\\n            </div>\\n\\n        <form role=\\\"form\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <h5>Descrição</h5>\\n                        <input [(ngModel)]=\\\"menu.description\\\" name=\\\"description\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <h5>Observação</h5>\\n                        <input [(ngModel)]=\\\"menu.observation\\\" name=\\\"observation\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <h5>Data do cardápio</h5>\\n                        <input class=\\\"form-control\\\" placeholder=\\\"dd/mm/yyyy\\\" name=\\\"date\\\" [(ngModel)]=\\\"date\\\" type=\\\"text\\\" mask='99/99/9999'>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xl-12 text-right\\\">\\n                        <button *ngIf=\\\"!edit\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"addMenu()\\\">Adicionar</button>\\n                        <button *ngIf=\\\"edit\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"addMenu()\\\">Editar</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\\n\"","module.exports = \":host /deep/ .datepicker-input .custom-select {\\n  width: 50%; }\\n\\n#multiselectingredient {\\n  height: 200px !important; }\\n\\n.ingredients {\\n  margin-bottom: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { IngredientsService } from '../../../services/ingredients/ingredients.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { SizesService } from '../../../services/sizes/sizes.service';\nimport { MenusService } from '../../../services/menus/menus.service';\nimport { Menu } from '../menu';\nimport { FormControl } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-menus-form',\n  templateUrl: './menus-form.component.html',\n  styleUrls: ['./menus-form.component.scss']\n})\nexport class MenusFormComponent implements OnInit {\n\n    public alerts: Array<any> = [];\n\n    edit: boolean = false;\n    ingredients: Observable<any[]>;\n    selected_ingredients = [];\n    sizes: Observable<any[]>;\n    date: any = null;\n    selected_sizes = [];\n    ingredients_ids: any[] = [];\n    prices_ids: any[] = [];\n    menu: Menu = new Menu();\n    access_token: any = null;\n\n    constructor(public route: ActivatedRoute,\n                private router: Router,\n                private ingredientsService: IngredientsService,\n                private sizesService: SizesService,\n                private menusService: MenusService,\n                public datepipe: DatePipe,\n                private modalService: NgbModal) { }\n\n    ngOnInit() {\n        if (localStorage.getItem('access_token') != null) {\n            this.access_token = localStorage.getItem('access_token');\n            if (this.route.snapshot.paramMap.get('id') != null) {\n                this.edit = true;\n                let menu = JSON.parse(localStorage.getItem('menu_edit'));\n                this.menu = menu;\n                this.date = this.datepipe.transform(menu.date, 'dd/MM/yyyy');\n                menu.ingredients.forEach((i) => {\n                    this.selected_ingredients.push(i);\n                });\n                menu.prices.forEach((s) => {\n                    this.selected_sizes.push(s);\n                });\n            }\n            this.load();\n        } else {\n            this.router.navigate(['/login']);\n        }\n    }\n\n    load() {\n        this.ingredients = this.ingredientsService.getIngredients(this.access_token);\n        this.sizes = this.sizesService.getSizes(this.access_token);\n    }\n\n    addMenu() {\n        if (this.validate()) {\n            this.prepareIds();\n            if (!this.edit) {\n                this.menusService\n                    .addMenu(this.access_token, this.menu)\n                    .subscribe(\n                        menu => this.router.navigate(['/menus-list', { message: 'Menu cadastrado com sucesso!' }])\n                    )\n            } else {\n                this.menusService\n                    .editMenu(this.access_token, this.menu, this.menu.id)\n                    .subscribe(\n                        menu => this.router.navigate(['/menus-list', { message: 'Menu alterado com sucesso!' }])\n                    )\n            }\n        }\n    }\n\n    validate() {\n        let today = new Date();\n        this.menu.date = this.date.substr(4, 4) + '-'\n                        + this.date.substr(2, 2) + '-'\n                        + this.date.substr(0, 2);\n        if (this.selected_ingredients.length < 1) {\n            this.showAlert('danger', 'Selecione os ingredientes da marmita!');\n            return false;\n        } else if (this.selected_sizes.length < 1) {\n            this.showAlert('danger', 'Selecione os tamanhos da marmita!');\n            return false;\n        } else if (this.menu.description == null) {\n            this.showAlert('danger', 'Informe a descrição da marmita!');\n            return false;\n        } else if (this.menu.date == null) {\n            this.showAlert('danger', 'Informe a data da marmita!');\n            return false;\n        } else if (this.datepipe.transform(today, 'yyyy-MM-dd') > this.menu.date) {\n            this.showAlert('danger', 'Informe uma data igual ou posterior a atual!');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    prepareIds() {\n        this.selected_ingredients.forEach((i) => {\n            this.ingredients_ids.push(i.id);\n        });\n        this.selected_sizes.forEach((s) => {\n            this.prices_ids.push(s.id);\n        })\n        this.menu.ingredients_ids = this.ingredients_ids;\n        this.menu.prices_ids = this.prices_ids;\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        )\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MenusFormRoutingModule } from './menus-form-routing.module';\nimport { MenusFormComponent } from './menus-form.component';\nimport {NgxMaskModule} from 'ngx-mask';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {DatePipe} from '@angular/common';\nimport { MenuProvider } from \"../../../providers/menu\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        MenusFormRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgbModule.forRoot(),\n        NgxPaginationModule,\n        NgxMaskModule.forRoot()\n    ],\n    declarations: [MenusFormComponent],\n    providers: [DatePipe, MenuProvider],\n})\nexport class MenusFormModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MenuProvider {\n\n    public storage: any;\n\n    public constructor() { }\n\n}\n"],"sourceRoot":""}