{"version":3,"sources":["webpack:///./node_modules/ngx-clipboard/fesm5/ngx-clipboard.js","webpack:///./node_modules/ngx-window-token/fesm5/ngx-window-token.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuI;AAClF;AACW;AACjB;;AAE/C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,uCAAuC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,uCAAuC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,mDAAmD;AACnD,SAAS,gCAAgC,OAAO,oDAAM,SAAS,kEAAQ,IAAI,GAAG;AAC9E,SAAS,gCAAgC,OAAO,oDAAM,SAAS,uDAAM,IAAI;AACzE,MAAM;AACN;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,sBAAsB,EAAE,KAAK,kEAAQ,cAAc,EAAE,KAAK,uDAAM,QAAQ,sDAAQ,QAAQ,sDAAQ;AAChG;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,6BAA6B,0DAAY;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC,wDAAwD;AAC3F;AACA;AACA,iCAAiC,iCAAiC;AAClE;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS;AACT,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,2BAA2B;AAC5D,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,mBAAmB,OAAO,0DAAY,uCAAuC;AAC7E;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY,EAAE,qEAAoB;AAChE;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEiI;;AAEjI,2CAA2C,cAAc,uxiB;;;;;;;;;;;;ACtVzD;AAAA;AAAA;AAAA;AAAA;AAAyD;;AAEzD;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE,iBAAiB,4DAAc;AAChD;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEiD;;AAEjD,2CAA2C,cAAc,+9B","file":"default~menus-menus-show-menus-show-module~order-details-order-details-module.js","sourcesContent":["import { Inject, Injectable, Optional, SkipSelf, Directive, EventEmitter, HostListener, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { WINDOW, NgxWindowTokenModule } from 'ngx-window-token';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ClipboardService = /** @class */ (function () {\r\n    function ClipboardService(document, window) {\r\n        this.document = document;\r\n        this.window = window;\r\n    }\r\n    Object.defineProperty(ClipboardService.prototype, \"isSupported\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.isTargetValid = /**\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\r\n            if (element.hasAttribute('disabled')) {\r\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n            }\r\n            return true;\r\n        }\r\n        throw new Error('Target should be input or textarea');\r\n    };\r\n    /**\r\n     * copyFromInputElement\r\n     * @param {?} targetElm\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.copyFromInputElement = /**\r\n     * copyFromInputElement\r\n     * @param {?} targetElm\r\n     * @return {?}\r\n     */\r\n    function (targetElm) {\r\n        try {\r\n            this.selectTarget(targetElm);\r\n            /** @type {?} */\r\n            var re = this.copyText();\r\n            this.clearSelection(targetElm, this.window);\r\n            return re && this.isCopySuccessInIE11();\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n    // this is for IE11 return true even if copy fail\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.isCopySuccessInIE11 = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var clipboardData = this.window['clipboardData'];\r\n        if (clipboardData && clipboardData.getData) {\r\n            if (!clipboardData.getData('Text')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     * @param {?} content\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.copyFromContent = /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     * @param {?} content\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    function (content, container) {\r\n        if (container === void 0) { container = this.window.document.body; }\r\n        // check if the temp textarea is still belong the current container.\r\n        // In case we have multiple places using ngx-clipboard, one is in a modal using container but the other one is not.\r\n        if (this.tempTextArea && !container.contains(this.tempTextArea)) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        if (!this.tempTextArea) {\r\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\r\n            try {\r\n                container.appendChild(this.tempTextArea);\r\n            }\r\n            catch (error) {\r\n                throw new Error('Container should be a Dom element');\r\n            }\r\n        }\r\n        this.tempTextArea.value = content;\r\n        return this.copyFromInputElement(this.tempTextArea);\r\n    };\r\n    /**\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.destroy = /**\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    function (container) {\r\n        if (container === void 0) { container = this.window.document.body; }\r\n        if (this.tempTextArea) {\r\n            container.removeChild(this.tempTextArea);\r\n            // removeChild doesn't remove the reference from memory\r\n            this.tempTextArea = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} inputElement\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.selectTarget = /**\r\n     * @param {?} inputElement\r\n     * @return {?}\r\n     */\r\n    function (inputElement) {\r\n        inputElement.select();\r\n        inputElement.setSelectionRange(0, inputElement.value.length);\r\n        return inputElement.value.length;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.copyText = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.document.execCommand('copy');\r\n    };\r\n    /**\r\n     * @param {?} inputElement\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.clearSelection = /**\r\n     * @param {?} inputElement\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    function (inputElement, window) {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        inputElement && inputElement.blur();\r\n        window.getSelection().removeAllRanges();\r\n    };\r\n    /**\r\n     * @param {?} doc\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    ClipboardService.prototype.createTempTextArea = /**\r\n     * @param {?} doc\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    function (doc, window) {\r\n        /** @type {?} */\r\n        var isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n        /** @type {?} */\r\n        var ta;\r\n        ta = doc.createElement('textarea');\r\n        // Prevent zooming on iOS\r\n        ta.style.fontSize = '12pt';\r\n        // Reset box model\r\n        ta.style.border = '0';\r\n        ta.style.padding = '0';\r\n        ta.style.margin = '0';\r\n        // Move element out of screen horizontally\r\n        ta.style.position = 'absolute';\r\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\r\n        /** @type {?} */\r\n        var yPosition = window.pageYOffset || doc.documentElement.scrollTop;\r\n        ta.style.top = yPosition + 'px';\r\n        ta.setAttribute('readonly', '');\r\n        return ta;\r\n    };\r\n    ClipboardService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    ClipboardService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n        { type: undefined, decorators: [{ type: Inject, args: [WINDOW,] }] }\r\n    ]; };\r\n    return ClipboardService;\r\n}());\r\n/**\r\n * @param {?} doc\r\n * @param {?} win\r\n * @param {?} parentDispatcher\r\n * @return {?}\r\n */\r\nfunction CLIPBOARD_SERVICE_PROVIDER_FACTORY(doc, win, parentDispatcher) {\r\n    return parentDispatcher || new ClipboardService(doc, win);\r\n}\r\n/** @type {?} */\r\nvar CLIPBOARD_SERVICE_PROVIDER = {\r\n    deps: [/** @type {?} */ (DOCUMENT), /** @type {?} */ (WINDOW), [new Optional(), new SkipSelf(), ClipboardService]],\r\n    provide: ClipboardService,\r\n    useFactory: CLIPBOARD_SERVICE_PROVIDER_FACTORY\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ClipboardDirective = /** @class */ (function () {\r\n    function ClipboardDirective(clipboardSrv) {\r\n        this.clipboardSrv = clipboardSrv;\r\n        this.cbOnSuccess = new EventEmitter();\r\n        this.cbOnError = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ClipboardDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ClipboardDirective.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.clipboardSrv.destroy(this.container);\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ClipboardDirective.prototype.onClick = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (!this.clipboardSrv.isSupported) {\r\n            this.handleResult(false, undefined, event);\r\n        }\r\n        else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\r\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, event);\r\n        }\r\n        else if (this.cbContent) {\r\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, event);\r\n        }\r\n    };\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @param {?} succeeded\r\n     * @param {?} copiedContent\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ClipboardDirective.prototype.handleResult = /**\r\n     * Fires an event based on the copy operation result.\r\n     * @param {?} succeeded\r\n     * @param {?} copiedContent\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (succeeded, copiedContent, event) {\r\n        if (succeeded) {\r\n            this.cbOnSuccess.emit({ isSuccess: true, content: copiedContent, event: event });\r\n        }\r\n        else {\r\n            this.cbOnError.emit({ isSuccess: false, event: event });\r\n        }\r\n    };\r\n    ClipboardDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    // tslint:disable-next-line:directive-selector\r\n                    selector: '[ngxClipboard]'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ClipboardDirective.ctorParameters = function () { return [\r\n        { type: ClipboardService }\r\n    ]; };\r\n    ClipboardDirective.propDecorators = {\r\n        targetElm: [{ type: Input, args: ['ngxClipboard',] }],\r\n        container: [{ type: Input }],\r\n        cbContent: [{ type: Input }],\r\n        cbOnSuccess: [{ type: Output }],\r\n        cbOnError: [{ type: Output }],\r\n        onClick: [{ type: HostListener, args: ['click', ['$event.target'],] }]\r\n    };\r\n    return ClipboardDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ClipboardModule = /** @class */ (function () {\r\n    function ClipboardModule() {\r\n    }\r\n    ClipboardModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule, NgxWindowTokenModule],\r\n                    // tslint:disable-next-line:object-literal-sort-keys\r\n                    declarations: [ClipboardDirective],\r\n                    exports: [ClipboardDirective],\r\n                    providers: [CLIPBOARD_SERVICE_PROVIDER]\r\n                },] },\r\n    ];\r\n    return ClipboardModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { CLIPBOARD_SERVICE_PROVIDER_FACTORY, ClipboardService, CLIPBOARD_SERVICE_PROVIDER, ClipboardDirective, ClipboardModule };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { NgModule, InjectionToken } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar /** @type {?} */ WINDOW = new InjectionToken('WindowToken');\r\n/**\r\n * @return {?}\r\n */\r\nfunction _window() {\r\n    return window;\r\n}\r\nvar NgxWindowTokenModule = /** @class */ (function () {\r\n    function NgxWindowTokenModule() {\r\n    }\r\n    NgxWindowTokenModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    providers: [{\r\n                            provide: WINDOW,\r\n                            useFactory: _window\r\n                        }]\r\n                },] },\r\n    ];\r\n    return NgxWindowTokenModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\nexport { WINDOW, _window, NgxWindowTokenModule };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXdpbmRvdy10b2tlbi5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vbmd4LXdpbmRvdy10b2tlbi9saWIvbmd4LXdpbmRvdy10b2tlbi5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBjb25zdCBXSU5ET1cgPSBuZXcgSW5qZWN0aW9uVG9rZW48V2luZG93PignV2luZG93VG9rZW4nKTtcblxuZXhwb3J0IGZ1bmN0aW9uIF93aW5kb3coKTogV2luZG93IHtcbiAgICByZXR1cm4gd2luZG93O1xufVxuXG5ATmdNb2R1bGUoe1xuICAgIHByb3ZpZGVyczogW3tcbiAgICAgICAgcHJvdmlkZTogV0lORE9XLFxuICAgICAgICB1c2VGYWN0b3J5OiBfd2luZG93XG4gICAgfV1cbn0pXG5leHBvcnQgY2xhc3MgTmd4V2luZG93VG9rZW5Nb2R1bGUgeyB9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEscUJBR2EsTUFBTSxHQUFHLElBQUksY0FBYyxDQUFTLGFBQWEsQ0FBQyxDQUFDOzs7O0FBRWhFO0lBQ0ksT0FBTyxNQUFNLENBQUM7Q0FDakI7Ozs7O2dCQUVBLFFBQVEsU0FBQztvQkFDTixTQUFTLEVBQUUsQ0FBQzs0QkFDUixPQUFPLEVBQUUsTUFBTTs0QkFDZixVQUFVLEVBQUUsT0FBTzt5QkFDdEIsQ0FBQztpQkFDTDs7K0JBZEQ7Ozs7Ozs7Ozs7Ozs7OzsifQ=="],"sourceRoot":""}