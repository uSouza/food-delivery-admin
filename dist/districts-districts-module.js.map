{"version":3,"sources":["webpack:///./src/app/layout/districts/districts-routing.module.ts","webpack:///./src/app/layout/districts/districts.component.html","webpack:///./src/app/layout/districts/districts.component.scss","webpack:///./src/app/layout/districts/districts.component.ts","webpack:///./src/app/layout/districts/districts.module.ts"],"names":[],"mappings":"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","file":"districts-districts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DistrictsComponent } from './districts.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DistrictsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DistrictsRoutingModule {}\n","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Exclusão de bairro</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <p>Tem certeza de que deseja excluir?</p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('dismiss')\\\">Não</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('delete')\\\">Sim</button>\\n        </div>\\n    </ng-template>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\">\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n            <h3>Gerenciamento de bairros</h3>\\n            <hr>\\n            <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n            <form role=\\\"form\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-8\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Nome do bairro</label>\\n                            <input [(ngModel)]=\\\"districtName\\\" name=\\\"districtName\\\" class=\\\"form-control\\\" >\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-lg-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Cidade</label>\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\">\\n                                    <option value=\\\"-1\\\">Selecione...</option>\\n                                <option *ngFor=\\\"let c of cities\\\" [ngValue]=\\\"c.id\\\">{{ c.name }} - {{ c.state.nomenclature }}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-xl-12 text-right\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn btn-success\\\" (click)=\\\"addDistrict()\\\">Adicionar</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n            <hr>\\n            <table *ngIf=\\\"districts.length > 0\\\" class=\\\"card-body table\\\">\\n                <thead>\\n                   <tr>\\n                      <th>Nome</th>\\n                      <th>Cidade</th>\\n                      <th>Estado</th>\\n                      <th>Ações</th>\\n                   </tr>\\n                </thead>\\n                <tbody *ngFor=\\\"let district of districts  | paginate: { itemsPerPage: 4, currentPage: page }\\\">\\n                   <tr class=\\\"table-default\\\">\\n                      <td>{{ district.name }}</td>\\n                      <td>{{ district.city.name }}</td>\\n                      <td>{{ district.city.state.nomenclature }}</td>\\n                      <td>\\n                         <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"editDistrict(district)\\\">Editar</button>\\n                         <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteDistrict(content, district)\\\">Deletar</button>\\n                      </td>\\n                   </tr>\\n                </tbody>\\n             </table>\\n             <div class=\\\"has-text-centered\\\">\\n                <pagination-controls (pageChange)=\\\"page = $event\\\" previousLabel=\\\"Anterior\\\" nextLabel=\\\"Próximo\\\"></pagination-controls>\\n            </div>\\n        </div>\\n    </div>\\n\"","module.exports = \".btn-sm {\\n  margin-left: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocationsService } from './../../services/locations/locations.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-districts',\n  templateUrl: './districts.component.html',\n  styleUrls: ['./districts.component.scss']\n})\nexport class DistrictsComponent implements OnInit {\n\n    cities = [];\n    districts = [];\n    districtName = null;\n    city = -1;\n    district_edit: any = null;\n    alerts: Array<any> = [];\n\n    constructor(public route: ActivatedRoute,\n        private router: Router,\n        private locationsService: LocationsService,\n        private modalService: NgbModal) { }\n\n    ngOnInit() {\n        if (localStorage.getItem('access_token') != null) {\n            this.load();\n        } else {\n            this.router.navigate(['/login']);\n        }\n    }\n\n    load() {\n        this.locationsService\n            .getCities(localStorage.getItem('access_token'))\n            .subscribe(\n                cities => this.cities = cities\n            );\n        this.locationsService\n            .getDistricts(localStorage.getItem('access_token'))\n            .subscribe(\n                districts => this.districts = districts\n            );\n    }\n\n    addDistrict() {\n        if (this.validate()) {\n            const district = {\n                name: this.districtName,\n                city_id: this.city\n            };\n            if (this.district_edit == null) {\n                this.locationsService\n                .addDistrict(localStorage.getItem('access_token'), district)\n                .subscribe(\n                    () => {\n                        this.updateDistricts(false);\n                    }\n                );\n            } else {\n                this.locationsService\n                .editDistrict(localStorage.getItem('access_token'), district, this.district_edit.id)\n                .subscribe(\n                    () => {\n                        this.updateDistricts(true);\n                    }\n                );\n            }\n        }\n    }\n\n    editDistrict(district) {\n        this.districtName = district.name;\n        this.city = district.city_id;\n        this.district_edit = district;\n    }\n\n    deleteDistrict(content, district) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result === 'delete') {\n                    this.locationsService\n                        .deleteDistrict(localStorage.getItem('access_token'), district.id)\n                        .subscribe(\n                            () => {\n                                this.load();\n                            }\n                        );\n                }\n        });\n    }\n\n    updateDistricts(edit) {\n        this.districtName = '';\n        this.city = -1;\n        this.load();\n\n        if (edit) {\n            this.showAlert('success', 'Bairro atualizado com sucesso!');\n            this.district_edit = null;\n        } else {\n            this.showAlert('success', 'Bairro inserido com sucesso!');\n        }\n\n    }\n\n    validate() {\n        if (this.districtName == null) {\n            this.showAlert('danger', 'Informe o nome da cidade!');\n            return false;\n        } else if (this.city == null) {\n            this.showAlert('danger', 'Informe o estado da cidade!');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        );\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { DistrictsRoutingModule } from './districts-routing.module';\nimport { DistrictsComponent } from './districts.component';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DatePipe } from '@angular/common';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        DistrictsRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgbModule.forRoot(),\n        NgxPaginationModule,\n        NgxMaskModule.forRoot()\n    ],\n    declarations: [ DistrictsComponent ],\n    providers: [ DatePipe ],\n})\nexport class DistrictsModule {}\n"],"sourceRoot":""}