{"version":3,"sources":["webpack:///./src/app/layout/dashboard/dashboard-routing.module.ts","webpack:///./src/app/layout/dashboard/dashboard.component.html","webpack:///./src/app/layout/dashboard/dashboard.component.scss","webpack:///./src/app/layout/dashboard/dashboard.component.ts","webpack:///./src/app/layout/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: DashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DashboardRoutingModule {\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    <i class=\\\"fa fa-clock-o fa-fw\\\"></i> Pedidos pendentes</div>\\n                <h5 *ngIf=\\\"orders.length == 0\\\">Não há pedidos para exibir</h5>\\n                <table *ngIf=\\\"orders.length > 0\\\" class=\\\"card-body table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Cliente</th>\\n                            <th>Endereço</th>\\n                            <th>Bairro</th>\\n                            <th>Preço</th>\\n                            <th>Qtd. Marmitas</th>\\n                            <th>Aberto às</th>\\n                            <th>Ações</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody *ngFor=\\\"let order of orders | paginate: { itemsPerPage: 7, currentPage: page }\\\">\\n                        <tr *ngIf=\\\"order.deliver && order.status_id==1\\\" class=\\\"table-warning\\\">\\n                            <td>{{order.client.name}}</td>\\n                            <td>{{order.location.address}} - {{order.location.number}}</td>\\n                            <td>{{order.location.district}}</td>\\n                            <td>{{order.price | currency: 'BRL': true}}</td>\\n                            <td>{{order.products.length}}</td>\\n                            <td>{{order.created_at | date: 'H:mm'}}</td>\\n                            <td>\\n                                <button (click)=\\\"showOrder(order)\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\">Visualizar</button>\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"!order.deliver && order.status_id==1\\\" class=\\\"table-default\\\">\\n                            <td>{{order.client.name}}</td>\\n                            <td>Retirar no balcão</td>\\n                            <td>Retirar no balcão</td>\\n                            <td>{{order.price | currency: 'BRL': true}}</td>\\n                            <td>{{order.created_at | date: 'H:mm'}}</td>\\n                            <td>\\n                                <button (click)=\\\"showOrder(order)\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\">Visualizar</button>\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"order.deliver && order.status_id==5\\\" class=\\\"table-danger\\\">\\n                            <td>{{order.client.name}}</td>\\n                            <td>{{order.location.address}} - {{order.location.number}}</td>\\n                            <td>{{order.location.district}}</td>\\n                            <td>{{order.price | currency: 'BRL': true}}</td>\\n                            <td>{{order.created_at | date: 'H:mm'}}</td>\\n                            <td>\\n                                <button (click)=\\\"cancelOrder(order)\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Remover</button>\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"!order.deliver && order.status_id==5\\\" class=\\\"table-danger\\\">\\n                            <td>{{order.client.name}}</td>\\n                            <td>Retirar no balcão</td>\\n                            <td>Retirar no balcão</td>\\n                            <td>{{order.price | currency: 'BRL': true}}</td>\\n                            <td>{{order.created_at | date: 'H:mm'}}</td>\\n                            <td>\\n                                <button (click)=\\\"cancelOrder(order)\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Remover</button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <div class=\\\"has-text-centered\\\">\\n                    <pagination-controls (pageChange)=\\\"page = $event\\\" previousLabel=\\\"Anterior\\\" nextLabel=\\\"Próximo\\\">\\n                    </pagination-controls>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xl-12 text-right\\\">\\n                        <a class=\\\"btn btn-lg btn-success\\\" href=\\\"#\\\">Atualizar</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".row {\\n  margin: 10px; }\\n\\n.fa-shopping-cart {\\n  font-size: 50px;\\n  margin-left: -30px; }\\n\\nbutton {\\n  margin-left: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../services/orders/orders.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Injectable } from '@angular/core';\nimport { LoginService } from '../../services/login/login.service';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n    animations: [routerTransition()]\n})\nexport class DashboardComponent implements OnInit {\n\n    orders: any[];\n    page: number = 1;\n    public alerts: Array<any> = [];\n\n    constructor(public router: Router,\n        public route: ActivatedRoute,\n        private ordersService: OrdersService,\n        private modalService: NgbModal,\n        private loginService: LoginService) {\n\n    }\n\n    ngOnInit() {\n        if (this.route.snapshot.paramMap.get('message') != null) {\n            this.showAlert('success', this.route.snapshot.paramMap.get('message'));\n        }\n        if (localStorage.getItem('access_token') == null) {\n            this.router.navigate(['/login']);\n        }\n        if (localStorage.getItem('player_id') != null) {\n            this.setOneSignalUserID(localStorage.getItem('player_id'));\n        }\n        this.getOrders();\n    }\n\n    setOneSignalUserID(id) {\n        this.loginService\n            .setOneSignalId(localStorage.getItem('access_token'), id)\n            .subscribe(\n                user => {\n                    console.log(user)\n                }\n            )\n    }\n\n    getOrders() {\n        this.ordersService\n            .getOpenOrders(localStorage.getItem('access_token'))\n            .subscribe(\n                orders => {\n                    this.orders = orders;\n                }\n            )\n    }\n\n    showOrder(order: any) {\n        console.log(order);\n        this.router.navigate(['/orders', { id: order.id }]);\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        )\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n\n    cancelOrder(order) {\n        this.ordersService\n            .deleteOrder(localStorage.getItem('access_token'), order.id)\n            .subscribe(\n                order => {\n                    this.getOrders()\n                }\n            )\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { StatModule } from '../../shared';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DashboardRoutingModule,\n        NgxPaginationModule,\n        StatModule,\n        NgbAlertModule.forRoot(),\n    ],\n    declarations: [\n        DashboardComponent,\n    ]\n})\nexport class DashboardModule {}\n"],"sourceRoot":""}