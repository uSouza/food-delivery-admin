{"version":3,"sources":["webpack:///./src/app/layout/closed-orders/closed-orders-routing.module.ts","webpack:///./src/app/layout/closed-orders/closed-orders.component.html","webpack:///./src/app/layout/closed-orders/closed-orders.component.scss","webpack:///./src/app/layout/closed-orders/closed-orders.component.ts","webpack:///./src/app/layout/closed-orders/closed-orders.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACW;AAElE,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;KACnC;CACJ,CAAC;AAMF;IAAA;IAAwC,CAAC;IAA5B,yBAAyB;QAJrC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,yBAAyB,CAAG;IAAD,gCAAC;CAAA;AAAH;;;;;;;;;;;;ACftC,kOAAkO,iBAAiB,8xBAA8xB,qCAAqC,0FAA0F,mBAAmB,uCAAuC,8BAA8B,uCAAuC,qCAAqC,uCAAuC,yBAAyB,uCAAuC,4CAA4C,uCAAuC,4CAA4C,8qB;;;;;;;;;;;ACA1hD,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AACQ;AACoB;AAOrE;IAMI,+BAAmB,MAAc,EACtB,KAAqB,EACpB,aAA4B;QAFrB,WAAM,GAAN,MAAM,CAAQ;QACtB,UAAK,GAAL,KAAK,CAAgB;QACpB,kBAAa,GAAb,aAAa,CAAe;QANxC,WAAM,GAAU,EAAE,CAAC;QACnB,SAAI,GAAW,CAAC,CAAC;QACV,WAAM,GAAe,EAAE,CAAC;IAIa,CAAC;IAE7C,wCAAQ,GAAR;QACI,IAAI,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,EAAE;YAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,yCAAS,GAAT;QAAA,iBAMC;QALG,IAAI,CAAC,aAAa;aACb,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;aACrD,SAAS,CACN,gBAAM,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAtB,CAAsB,CACnC;IACT,CAAC;IAED,yCAAS,GAAT,UAAU,MAAM;QACZ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,yCAAS,GAAT,UAAU,KAAU;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IAhCQ,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAO6B,sDAAM;YACf,8DAAc;YACL,6EAAa;OAR/B,qBAAqB,CAkCjC;IAAD,4BAAC;CAAA;AAlCiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVO;AACM;AACmB;AACX;AACK;AACP;AACsB;AACT;AAC3B;AACe;AACb;AAkBzC;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAf9B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,mEAAc;gBACd,kEAAmB;gBACnB,uFAAyB;gBACzB,yEAAc,CAAC,OAAO,EAAE;gBACxB,oEAAS,CAAC,OAAO,EAAE;gBACnB,kEAAmB;gBACnB,sDAAa,CAAC,OAAO,EAAE;aAC1B;YACD,YAAY,EAAE,CAAC,8EAAqB,CAAC;YACrC,SAAS,EAAE,CAAC,wDAAQ,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH","file":"closed-orders-closed-orders-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClosedOrdersComponent } from './closed-orders.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ClosedOrdersComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ClosedOrdersRoutingModule {}\n","module.exports = \"    <div [@routerTransition]>\\n        <div class=\\\"row\\\">\\n           <div class=\\\"col-lg-12\\\">\\n              <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n              <div class=\\\"card mb-3\\\">\\n                 <div class=\\\"card-header\\\"> Pedidos encerrados</div>\\n                 <h5 *ngIf=\\\"orders.length == 0\\\">Não há pedidos para exibir</h5>\\n                 <table *ngIf=\\\"orders.length > 0\\\" class=\\\"card-body table\\\">\\n                    <thead>\\n                       <tr>\\n                          <th>Cliente</th>\\n                          <th>Restaurante</th>\\n                          <th>Preço</th>\\n                          <th>Qtde. Marmitas</th>\\n                          <th>Aberto em</th>\\n                          <th>Confirmado em</th>\\n                          <th>Ação</th>\\n                       </tr>\\n                    </thead>\\n                    <tbody *ngFor=\\\"let order of orders | paginate: { itemsPerPage: 7, currentPage: page }\\\">\\n                       <tr class=\\\"table-default\\\">\\n                          <td>{{order.client.name}}</td>\\n                          <td>{{ order.company.fantasy_name }}</td>\\n                          <td>{{order.price | currency: 'BRL': true}}</td>\\n                          <td>{{ order.products.length }}</td>\\n                          <td>{{order.created_at | date: 'dd/MM/yyyy H:mm'}}</td>\\n                          <td>{{order.updated_at | date: 'dd/MM/yyyy H:mm'}}</td>\\n                          <td>\\n                                <button (click)=\\\"showOrder(order)\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\">Visualizar</button>\\n                          </td>\\n                       </tr>\\n                    </tbody>\\n                 </table>\\n                 <div class=\\\"has-text-centered\\\">\\n                    <pagination-controls\\n                        (pageChange)=\\\"page = $event\\\"\\n                        previousLabel=\\\"Anterior\\\"\\n                        nextLabel=\\\"Próximo\\\">\\n                    </pagination-controls>\\n                </div>\\n              </div>\\n           </div>\\n        </div>\\n    </div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrdersService } from '../../services/orders/orders.service';\n\n@Component({\n  selector: 'app-closed-orders',\n  templateUrl: './closed-orders.component.html',\n  styleUrls: ['./closed-orders.component.scss']\n})\nexport class ClosedOrdersComponent implements OnInit {\n\n    orders: any[] = [];\n    page: number = 1;\n    public alerts: Array<any> = [];\n\n    constructor(public router: Router,\n        public route: ActivatedRoute,\n        private ordersService: OrdersService) { }\n\n    ngOnInit() {\n        if (localStorage.getItem('access_token') == null) {\n            this.router.navigate(['/login']);\n        }\n        this.getOrders();\n    }\n\n    getOrders() {\n        this.ordersService\n            .getClosedOrders(localStorage.getItem('access_token'))\n            .subscribe(\n                orders => this.setOrders(orders)\n            )\n    }\n\n    setOrders(orders) {\n        console.log(orders);\n        this.orders = orders;\n    }\n\n    showOrder(order: any) {\n        this.router.navigate(['/orders', { id: order.id }]);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ClosedOrdersRoutingModule } from './closed-orders-routing.module';\nimport { ClosedOrdersComponent } from './closed-orders.component';\nimport {NgxMaskModule} from 'ngx-mask';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {DatePipe} from '@angular/common';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        ClosedOrdersRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgbModule.forRoot(),\n        NgxPaginationModule,\n        NgxMaskModule.forRoot()\n    ],\n    declarations: [ClosedOrdersComponent],\n    providers: [DatePipe],\n})\nexport class ClosedOrdersModule {}\n"],"sourceRoot":""}