{"version":3,"sources":["webpack:///./src/app/layout/sizes/sizes-routing.module.ts","webpack:///./src/app/layout/sizes/sizes.component.html","webpack:///./src/app/layout/sizes/sizes.component.scss","webpack:///./src/app/layout/sizes/sizes.component.ts","webpack:///./src/app/layout/sizes/sizes.module.ts"],"names":[],"mappings":"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","file":"sizes-sizes-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SizesComponent } from './sizes.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SizesComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SizesRoutingModule {}\n","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Exclusão de tamanho</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Tem certeza de que deseja excluir?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('dismiss')\\\">Não</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('delete')\\\">Sim</button>\\n    </div>\\n</ng-template>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n        <h3>Gerenciamento de tamanhos de marmitas</h3>\\n        <hr>\\n        <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n        <form role=\\\"form\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-8\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Descrição do tamanho</label>\\n                        <input [(ngModel)]=\\\"size\\\" name=\\\"size\\\" class=\\\"form-control\\\" >\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Valor</label>\\n                        <input currencyMask [(ngModel)]=\\\"price\\\" name=\\\"price\\\" class=\\\"form-control\\\" [options]=\\\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\\\" >\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xl-12 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn btn-success\\\" (click)=\\\"addSize()\\\">Adicionar</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n        <hr>\\n        <table *ngIf=\\\"sizes.length > 0\\\" class=\\\"card-body table\\\">\\n            <thead>\\n               <tr>\\n                  <th>Tamanho</th>\\n                  <th>Valor</th>\\n                  <th>Ações</th>\\n               </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let size of sizes  | paginate: { itemsPerPage: 4, currentPage: page }\\\">\\n               <tr class=\\\"table-default\\\">\\n                  <td>{{size.size}}</td>\\n                  <td>{{size.price | currency: 'BRL': true}}</td>\\n                  <td>\\n                     <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"editSize(size)\\\">Editar</button>\\n                     <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteSize(content, size)\\\">Deletar</button>\\n                  </td>\\n               </tr>\\n            </tbody>\\n         </table>\\n         <div class=\\\"has-text-centered\\\">\\n            <pagination-controls (pageChange)=\\\"page = $event\\\" previousLabel=\\\"Anterior\\\" nextLabel=\\\"Próximo\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".btn-sm {\\n  margin-left: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { SizesService } from '../../services/sizes/sizes.service';\n\n@Component({\n  selector: 'app-sizes',\n  templateUrl: './sizes.component.html',\n  styleUrls: ['./sizes.component.scss']\n})\nexport class SizesComponent implements OnInit {\n\n    sizes_available: any [];\n    sizes: any [];\n    size: any = '';\n    price: any = null;\n    size_edit: any = null;\n\n    public alerts: Array<any> = [];\n\n    constructor(public route: ActivatedRoute,\n        private router: Router,\n        private sizesService: SizesService,\n        private modalService: NgbModal) { }\n\n    ngOnInit() {\n        if (localStorage.getItem('access_token') != null) {\n            this.load();\n            this.sizes_available = [\n                { name: '' },\n                { name: 'P' },\n                { name: 'M' },\n                { name: 'G' },\n                { name: 'GG' },\n                { name: 'Fitness' },\n                { name: 'Especial' }\n            ];\n        } else {\n            this.router.navigate(['/login']);\n        }\n\n    }\n\n    load() {\n        this.sizesService\n            .getSizes(localStorage.getItem('access_token'))\n            .subscribe(\n                sizes => {\n                    this.sizes = sizes\n                }\n            )\n    }\n\n    addSize() {\n\n        if (this.validate()) {\n\n            let size = {\n                size: this.size,\n                price: this.price\n            }\n\n            if (this.size_edit == null) {\n                this.sizesService\n                .addSize(localStorage.getItem('access_token'), size)\n                .subscribe(\n                    size => {\n                        this.updateSizes(size, false)\n                    }\n                )\n            } else {\n                this.sizesService\n                .editSize(localStorage.getItem('access_token'), size, this.size_edit.id)\n                .subscribe(\n                    size => {\n                        this.updateSizes(size, true)\n                    }\n                )\n            }\n\n        }\n    }\n\n    editSize(size) {\n        this.size = size.size;\n        this.price = size.price;\n        this.size_edit = size;\n    }\n\n    deleteSize(content, size) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result == 'delete') {\n                    this.sizesService\n                        .deleteSize(localStorage.getItem('access_token'), size.id)\n                        .subscribe(\n                            res => {\n                                this.load()\n                            }\n                        )\n                }\n        });\n    }\n\n    updateSizes(additional, edit) {\n        this.size = '';\n        this.price = null;\n        this.load();\n\n        if (edit) {\n            this.showAlert('success', 'Tamanho atualizado com sucesso!');\n            this.size_edit = null;\n        } else {\n            this.showAlert('success', 'Tamanho inserido com sucesso!');\n        }\n\n    }\n\n    validate() {\n        if (this.size == '') {\n            this.showAlert('danger', 'Informe o tamanho a ser cadastrado!');\n            return false;\n        } else if (this.price == null) {\n            this.showAlert('danger', 'Informe o valor do tamanho!');\n            return false;\n        } else if (this.price <= 0) {\n            this.showAlert('danger', 'O valor do tamanho deve ser maior que zero!');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        )\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SizesRoutingModule } from './sizes-routing.module';\nimport { SizesComponent } from './sizes.component';\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SizesRoutingModule,\n        NgbAlertModule.forRoot(),\n        CurrencyMaskModule,\n        NgxPaginationModule\n        ],\n    declarations: [SizesComponent]\n})\nexport class SizesModule {}\n"],"sourceRoot":""}