{"version":3,"sources":["webpack:///./src/app/layout/tags/tags-routing.module.ts","webpack:///./src/app/layout/tags/tags.component.html","webpack:///./src/app/layout/tags/tags.component.scss","webpack:///./src/app/layout/tags/tags.component.ts","webpack:///./src/app/layout/tags/tags.module.ts"],"names":[],"mappings":"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","file":"tags-tags-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TagsComponent } from './tags.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: TagsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TagsRoutingModule {}\n","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Exclusão de Tag</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <p>Tem certeza de que deseja excluir a tag?</p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('dismiss')\\\">Não</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('delete')\\\">Sim</button>\\n        </div>\\n    </ng-template>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\">\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n            <h3>Gerenciamento de Tags</h3>\\n            <hr>\\n            <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n            <form role=\\\"form\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Nome da Tag</label>\\n                            <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-xl-12 text-right\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn btn-success\\\" (click)=\\\"addTag()\\\">Adicionar</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n            <table *ngIf=\\\"tags.length > 0\\\" class=\\\"card-body table\\\">\\n                <thead>\\n                   <tr>\\n                      <th>Nome</th>\\n                      <th>Ações</th>\\n                   </tr>\\n                </thead>\\n                <tbody *ngFor=\\\"let tag of tags  | paginate: { itemsPerPage: 4, currentPage: page }\\\">\\n                   <tr class=\\\"table-default\\\">\\n                      <td>{{tag.name}}</td>\\n                      <td>\\n                         <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"editTag(tag)\\\">Editar</button>\\n                         <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteTag(content, tag)\\\">Deletar</button>\\n                      </td>\\n                   </tr>\\n                </tbody>\\n             </table>\\n             <div class=\\\"has-text-centered\\\">\\n                <pagination-controls (pageChange)=\\\"page = $event\\\" previousLabel=\\\"Anterior\\\" nextLabel=\\\"Próximo\\\"></pagination-controls>\\n            </div>\\n        </div>\\n    </div>\\n\"","module.exports = \"form {\\n  margin-top: 20px; }\\n\\n.btn-sm {\\n  margin-left: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TagsService } from '../../services/tags/tags.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.scss']\n})\nexport class TagsComponent implements OnInit {\n\n    public alerts: Array<any> = [];\n\n    name: any = null;\n    tag_edit: any = null;\n    tags: any[] = [];\n    page: number = 1;\n\n    constructor(public route: ActivatedRoute,\n                private router: Router,\n                private tagsService: TagsService,\n                private modalService: NgbModal\n                ) { }\n\n    ngOnInit() {\n\n        if (localStorage.getItem('access_token') != null) {\n            this.tagsService\n                .getTags(localStorage.getItem('access_token'))\n                .subscribe(\n                    tags => {\n                        this.tags = tags\n                    })\n        } else {\n            this.router.navigate(['/login']);\n        }\n\n    }\n\n    addTag() {\n        if (this.validate()) {\n            if (this.tag_edit == null) {\n                this.tagsService\n                    .addTag(localStorage.getItem('access_token'), this.name)\n                    .subscribe(\n                        tag => {\n                            this.updateTags(tag, false)\n                        }\n                    )\n            } else {\n                this.tagsService\n                .editTag(localStorage.getItem('access_token'), this.name, this.tag_edit.id)\n                .subscribe(\n                    tag => {\n                        this.updateTags(tag, true)\n                    }\n                )\n            }\n\n        }\n    }\n\n    updateTags(tag, edit) {\n        this.name = null;\n        this.tags.push(tag);\n        if (edit) {\n            this.showAlert('success', 'Tag atualizada com sucesso!');\n            const index: number = this.tags.indexOf(this.tag_edit);\n            this.tags.splice(index, 1);\n            this.tag_edit = null;\n        } else {\n            this.showAlert('success', 'Tag cadastrada com sucesso!');\n        }\n\n    }\n\n    validate() {\n        if (this.name == null) {\n            this.showAlert('danger', 'Informe o nome da Tag!');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        )\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n\n    editTag(tag) {\n        this.name = tag.name;\n        this.tag_edit = tag;\n    }\n\n    deleteTag(content, tag) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result == 'delete') {\n                    const index: number = this.tags.indexOf(tag);\n                    this.tags.splice(index, 1);\n                    this.tagsService\n                        .deleteTag(localStorage.getItem('access_token'), tag.id)\n                        .subscribe(\n                            res => {\n                                console.log(res)\n                            }\n                        )\n                }\n            });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { TagsRoutingModule } from './tags-routing.module';\nimport { TagsComponent } from './tags.component';\nimport {NgxMaskModule} from 'ngx-mask';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {DatePipe} from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        TagsRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgbModule.forRoot(),\n        NgxPaginationModule,\n        NgxMaskModule.forRoot()\n    ],\n    declarations: [TagsComponent],\n    providers: [DatePipe],\n})\nexport class TagsModule {}\n"],"sourceRoot":""}