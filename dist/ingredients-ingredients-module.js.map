{"version":3,"sources":["webpack:///./src/app/layout/ingredients/ingredients-routing.module.ts","webpack:///./src/app/layout/ingredients/ingredients.component.html","webpack:///./src/app/layout/ingredients/ingredients.component.scss","webpack:///./src/app/layout/ingredients/ingredients.component.ts","webpack:///./src/app/layout/ingredients/ingredients.module.ts"],"names":[],"mappings":"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","file":"ingredients-ingredients-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IngredientsComponent } from './ingredients.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: IngredientsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class IngredientsRoutingModule {}\n","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Exclusão de ingrediente</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Tem certeza de que deseja excluir o ingrediente?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('dismiss')\\\">Não</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('delete')\\\">Sim</button>\\n    </div>\\n</ng-template>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n        <h3>Gerenciamento de Ingredientes</h3>\\n        <hr>\\n        <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}</ngb-alert>\\n        <form role=\\\"form\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-7\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Nome</label>\\n                        <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-5\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Grupo</label>\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"ingredient_group_id\\\" name=\\\"ingredient_group_id\\\">\\n                            <option *ngFor=\\\"let i of ingredients_groups\\\" [ngValue]=\\\"i.id\\\">{{i.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xl-12 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn btn-success\\\" (click)=\\\"addIngredient()\\\">Adicionar</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n        <hr>\\n        <table *ngIf=\\\"ingredients.length > 0\\\" class=\\\"card-body table\\\">\\n            <thead>\\n               <tr>\\n                  <th>Nome</th>\\n                  <th>Grupo</th>\\n                  <th>Ações</th>\\n               </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let ingredient of ingredients  | paginate: { itemsPerPage: 4, currentPage: page }\\\">\\n               <tr class=\\\"table-default\\\">\\n                  <td>{{ingredient.name}}</td>\\n                  <td>{{ingredient.ingredient_group.name}}</td>\\n                  <td>\\n                     <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"editIngredient(ingredient)\\\">Editar</button>\\n                     <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteIngredient(content, ingredient)\\\">Deletar</button>\\n                  </td>\\n               </tr>\\n            </tbody>\\n         </table>\\n         <div class=\\\"has-text-centered\\\">\\n            <pagination-controls (pageChange)=\\\"page = $event\\\" previousLabel=\\\"Anterior\\\" nextLabel=\\\"Próximo\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"form {\\n  margin-top: 20px; }\\n\\n.btn-sm {\\n  margin-left: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IngredientGroupsService } from '../../services/ingredient-groups/ingredient-groups.service';\nimport { IngredientsService } from '../../services/ingredients/ingredients.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'app-ingredients',\n    templateUrl: './ingredients.component.html',\n    styleUrls: ['./ingredients.component.scss']\n})\nexport class IngredientsComponent implements OnInit {\n\n    public alerts: Array<any> = [];\n    name: any = null;\n    ingredient_group_id: any = null;\n    ingredient_edit: any = null;\n    ingredients_groups: any[] = [];\n    ingredients: any[] = [];\n    page: number = 1;\n\n    constructor(public route: ActivatedRoute,\n        private router: Router,\n        private ingredientGroupService: IngredientGroupsService,\n        private ingredientsService: IngredientsService,\n        private modalService: NgbModal) { }\n\n    ngOnInit() {\n\n        if (localStorage.getItem('access_token') != null) {\n            this.load();\n        } else {\n            this.router.navigate(['/login']);\n        }\n    }\n\n    load() {\n        this.name = '';\n        this.ingredientGroupService\n            .getIngredientsGroups(localStorage.getItem('access_token'))\n            .subscribe(\n                ingredients_groups => {\n                    this.addIngredientGroups(ingredients_groups)\n                }\n            );\n\n        this.ingredientsService\n            .getIngredients(localStorage.getItem('access_token'))\n            .subscribe(\n                ingredients => {\n                    this.ingredients = ingredients\n                }\n            )\n    }\n\n    addIngredientGroups(ingredients_groups) {\n        let groupControl = {\n            name: '',\n            id: 0\n        }\n        this.ingredients_groups = ingredients_groups;\n        this.ingredients_groups.push(groupControl);\n        this.ingredient_group_id = 0;\n    }\n\n    addIngredient() {\n        if (this.validate()) {\n            let ingredient = {\n                name: this.name,\n                ingredient_group_id: this.ingredient_group_id\n            }\n\n            if (this.ingredient_edit == null) {\n                this.ingredientsService\n                    .addIngredient(localStorage.getItem('access_token'), ingredient)\n                    .subscribe(\n                        ingredient => {\n                            this.updateIngredients(ingredient, false)\n                        },\n                        err => {\n                            if (err.error.text == 'ingredient already registered') {\n                                this.showAlert('danger', 'Ingrediente já está cadastrado!');\n                                this.name = null;\n                                this.ingredient_group_id = null;\n                            }\n                        }\n                    )\n            } else {\n                this.ingredientsService\n                    .editIngredient(localStorage.getItem('access_token'), ingredient, this.ingredient_edit.id)\n                    .subscribe(\n                        ingredient => {\n                            this.updateIngredients(ingredient, true)\n                        }\n                    )\n            }\n        }\n    }\n\n    updateIngredients(ingredient, edit) {\n        this.name = null;\n        this.ingredient_group_id = 0;\n        this.load();\n        console.log(ingredient);\n        if (edit) {\n            this.showAlert('success', 'Grupo de ingrediente atualizado com sucesso!');\n            const index: number = this.ingredients.indexOf(this.ingredient_edit);\n            this.ingredients.splice(index, 1);\n            this.ingredient_edit = null;\n        } else {\n            this.showAlert('success', 'Grupo de ingrediente adicionado com sucesso!');\n        }\n\n    }\n\n    validate() {\n        if (this.name == null) {\n            this.showAlert('danger', 'Informe o nome do ingrediente!');\n            return false;\n        } else if (this.ingredient_group_id == null) {\n            this.showAlert('danger', 'Informe o grupo do ingrediente!');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        )\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n\n    editIngredient(ingredient) {\n        this.name = ingredient.name;\n        this.ingredient_group_id = ingredient.ingredient_group_id;\n        this.ingredient_edit = ingredient;\n    }\n\n    deleteIngredient(content, ingredient) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result == 'delete') {\n                    this.ingredientsService\n                        .deleteIngredient(localStorage.getItem('access_token'), ingredient.id)\n                        .subscribe(\n                            res => {\n                                this.load()\n                            }\n                        )\n                }\n            });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { IngredientsRoutingModule } from './ingredients-routing.module';\nimport { IngredientsComponent } from './ingredients.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IngredientsRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgxPaginationModule\n        ],\n    declarations: [IngredientsComponent]\n})\nexport class IngredientsModule {}\n"],"sourceRoot":""}