{"version":3,"sources":["webpack:///./src/app/layout/menus/menus-show/menus-show-routing.module.ts","webpack:///./src/app/layout/menus/menus-show/menus-show.component.html","webpack:///./src/app/layout/menus/menus-show/menus-show.component.scss","webpack:///./src/app/layout/menus/menus-show/menus-show.component.ts","webpack:///./src/app/layout/menus/menus-show/menus-show.module.ts"],"names":[],"mappings":"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","file":"menus-menus-show-menus-show-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MenusShowComponent } from './menus-show.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MenusShowComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MenusShowRoutingModule {}\n","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Inativação de cardápio</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Deseja realmente inativar o cardápio?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('noDelete')\\\">Não</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('delete')\\\">Sim</button>\\n    </div>\\n</ng-template>\\n\\n<div class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\" *ngFor=\\\"let alert of alerts\\\">{{ alert.message }}\\n        </ngb-alert>\\n        <div class=\\\"col-xl-12\\\">\\n            <h2>\\n                Cardápio nº {{menu.id}}\\n            </h2>\\n        </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    Dados do cardápio\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\"><strong>Descrição: </strong>{{ menu.description }}</h5>\\n                    <p class=\\\"card-text\\\"><strong>Observação: </strong>{{ menu.observation }}</p>\\n                    <p class=\\\"card-text\\\"><strong>Data do cardápio: </strong>{{ menu.date | date: 'dd/MM/yyyy' }}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-6\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    Ingredientes\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <table *ngIf=\\\"menu.ingredients.length > 0\\\" class=\\\"card-body table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Ingrediente</th>\\n                                <th>Grupo</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody\\n                            *ngFor=\\\"let ingredient of menu.ingredients | paginate: { itemsPerPage: 7, currentPage: page }\\\">\\n                            <tr class=\\\"table-default\\\">\\n                                <th>{{ingredient.name}}</th>\\n                                <td>{{ingredient.ingredient_group.name}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-xl-6\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    Tamanhos\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <table *ngIf=\\\"menu.prices.length > 0\\\" class=\\\"card-body table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Tamanho</th>\\n                                <th>Valor</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody *ngFor=\\\"let price of menu.prices | paginate: { itemsPerPage: 7, currentPage: page }\\\">\\n                            <tr class=\\\"table-default\\\">\\n                                <th>{{price.size}}</th>\\n                                <td>{{price.price | currency: 'BRL': true}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12 text-right\\\">\\n            <button *ngIf=\\\"menu.deleted_at == null\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-danger\\\"\\n                (click)=\\\"delete(content)\\\">Inativar</button>\\n            <button *ngIf=\\\"menu.deleted_at != null\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-warning\\\"\\n                (click)=\\\"restoreMenu(menu)\\\">Reativar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg btn-default\\\" (click)=\\\"copyToClipboard()\\\">Copiar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"edit()\\\">Editar</button>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".row {\\n  margin-top: 10px; }\\n\\n.btn-lg {\\n  margin-left: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { MenusService } from '../../../services/menus/menus.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { DatePipe } from '@angular/common';\nimport { IngredientGroupsService } from '../../../services/ingredient-groups/ingredient-groups.service';\n\n@Component({\n    selector: 'app-menus-show',\n    templateUrl: './menus-show.component.html',\n    styleUrls: ['./menus-show.component.scss']\n})\nexport class MenusShowComponent implements OnInit {\n\n    menu: any;\n    ingredientGroups: any = null;\n    public alerts: Array<any> = [];\n\n    constructor(public route: ActivatedRoute,\n        private router: Router,\n        private _clipboardService: ClipboardService,\n        public datepipe: DatePipe,\n        private menusService: MenusService,\n        private ingredientGroupService: IngredientGroupsService,\n        private modalService: NgbModal) { }\n\n    ngOnInit() {\n        if (localStorage.getItem('access_token') != null) {\n            this.getMenu();\n            this.getIngredientsMenu();\n        } else {\n            this.router.navigate(['/login']);\n        }\n    }\n\n    getIngredientsMenu() {\n        this.ingredientGroupService\n            .getIngredientesByMenu(localStorage.getItem('access_token'), this.route.snapshot.paramMap.get('id'))\n            .subscribe(\n                ingredient_groups => {\n                    this.ingredientGroups = ingredient_groups;\n                }\n            );\n    }\n\n    getMenu() {\n        this.menusService\n            .getMenu(localStorage.getItem('access_token'), this.route.snapshot.paramMap.get('id'))\n            .subscribe(\n                menu => {\n                    this.setMenu(menu);\n                }\n            );\n    }\n\n    setMenu(menu) {\n        if (menu.date === '2000-01-01') {\n            menu.date = Date.now();\n        }\n        this.menu = menu;\n    }\n\n    edit() {\n        localStorage.setItem('menu_edit', JSON.stringify(this.menu));\n        this.router.navigate(['/menus-form', { id: this.menu.id }]);\n    }\n\n    delete(content) {\n        this.modalService\n            .open(content, { size: 'lg' })\n            .result.then((result) => {\n                if (result === 'delete') {\n                    this.menusService\n                        .deleteMenu(localStorage.getItem('access_token'), this.menu.id)\n                        .subscribe(\n                            () => { this.router.navigate(['/menus-list', { message: 'Menu inativado com sucesso!' }]); },\n                            err => { this.showAlert('danger', err) }\n                        );\n                }\n            });\n    }\n\n    showAlert(type, err) {\n        this.alerts.push(\n            {\n                id: 1,\n                type: type,\n                message: err\n            }\n        );\n    }\n\n    closeAlert(alert: any) {\n        const index: number = this.alerts.indexOf(alert);\n        this.alerts.splice(index, 1);\n    }\n\n    restoreMenu(menu) {\n        this.menusService\n            .restoreMenu(localStorage.getItem('access_token'), menu.id)\n            .subscribe(\n                () => this.router.navigate(['/menus-list', { message: 'Menu reativado com sucesso!' }])\n            );\n    }\n\n    copyToClipboard() {\n        this._clipboardService.copyFromContent(this.getMenuFormat());\n    }\n\n    getMenuFormat() {\n        const header = '*RESTAURANTE ' + this.menu.company.fantasy_name.toUpperCase() + '*' + '\\n\\n' +\n            '*Refeição do dia:* ' + this.datepipe.transform(this.menu.date, 'dd/MM/yyyy') + '\\n';\n        const description = '\\n*Refeição ' + this.menu.description + '*\\n';\n        let ingredients = '\\n*Ingredientes*\\n';\n        this.ingredientGroups.forEach(group => {\n            ingredients += '*' + group.name + '*\\n';\n            group.ingredients.forEach(i => {\n                ingredients += '- ' + i.name + '\\n';\n            });\n        });\n        let prices = '\\n*Valores*\\n';\n        this.menu.prices.forEach(p => {\n            prices += '- ' + p.size + ' R$ ' + p.price + '\\n';\n        });\n        const finalText = '\\n*Peça sua refeição pelo site ou APP Pandeco* 🍝🍽' +\n            '\\n*Site:* pedido.pandeco.com.br\\n*Google Play:* http://bit.do/pandeco';\n        return header + description + ingredients + prices + finalText;\n\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MenusShowRoutingModule } from './menus-show-routing.module';\nimport { MenusShowComponent } from './menus-show.component';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DatePipe } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        MenusShowRoutingModule,\n        NgbAlertModule.forRoot(),\n        NgbModule.forRoot(),\n        NgxPaginationModule,\n        ClipboardModule,\n        NgxMaskModule.forRoot()\n    ],\n    declarations: [MenusShowComponent],\n    providers: [DatePipe],\n})\nexport class MenusShowModule { }\n"],"sourceRoot":""}